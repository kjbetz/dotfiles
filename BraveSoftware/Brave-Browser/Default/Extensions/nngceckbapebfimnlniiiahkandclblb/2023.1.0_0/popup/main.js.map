{"version":3,"file":"popup/main.js","mappings":"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UAAUukI,SACjDD,KAAM,CAACnhE,KAET,CACEn2E,QAASs2E,GACTr2E,SAAU,IAAIg4E,GAAauC,GAAa,KAE1C,CACEx6E,QAASu2E,GACTt2E,UAAU,GAEZ,CACED,QAASw2E,GACT6gE,WACGjzI,GAAkD,CAACgmC,EAAkBjP,IACpE/2B,EAAiBQ,KAAK,SAAU,CAAEwlC,QAASA,EAASjP,OAAQA,IAChEm8G,KAAM,CAACvzI,KAET,CACE/D,QAASy2E,GACTx2E,SAAU,MAEZ,CACED,QAAS42E,GACT32E,UAAU,GAEZ,CACED,QAASgwB,GACT+iD,SAAU,GACVukE,KAAM,CAAC9/D,KAET,CACEx3E,QAAS81D,GACTid,SAAU,GACVukE,KAAM,CAACpnH,GAAkCpX,KAE3C,CACE9Y,QAAS8D,GACTivE,SAAU,GACVukE,KAAM,CACJt7H,GACAlD,GACA02D,GACAx/C,GACAvqB,GACA1B,GACAgV,GACA/U,GACA0B,GACAiV,GACAgjB,GACA57B,KAGJ,CACE/B,QAAS61D,GACTwhF,WAAY,CACV1hI,EACAu0F,EACAjxF,EACAkxF,EACAloG,EACA2jD,EACA37C,EACAvC,EACA8N,IAEA,IAAI,GACFG,EACAu0F,EACAjxF,EACAkxF,EACAloG,GACA,IAAM2jD,EAAS96C,IAAIinC,KACnB9nC,EACAvC,EACA8N,GAEJ8hI,KAAM,CACJt7H,GACAs7D,GACAx+D,GACAq+D,GACAp1E,GACA,MACAgX,GACA4B,GACAs8D,KAGJ,CACEj3E,QAAS08C,GACTq2B,SAAU,GACVukE,KAAM,CACJt7H,GACAja,GACA8zD,GACAl7C,KAGJ,CACE3a,QrXnPC,cAA6C08C,KqXoP9CrL,YAAaqL,IAEf,CACE18C,QAAS28C,GACTo2B,SAAU0xC,GACV6yB,KAAM,CAAC56F,GAA0B5jC,KAEnC,CACE9Y,QCnRC,QDoRD+yE,SE/QC,MACL3zE,YACU6Z,EACAy/B,EACAzuC,EACAutI,GAHA,KAAAv+H,WAAAA,EACA,KAAAy/B,wBAAAA,EACA,KAAAzuC,WAAAA,EACA,KAAAutI,eAAAA,CACP,CAEGC,cAAc1I,G,0CAClB,IACE,MAAM2I,QAA4Bp1I,KAAKo2C,wBAAwBo2F,aAAaC,SACtEzsI,KAAK2W,WAAWrU,KAAK,SAAU,YAAa8yI,GAAqB,GAAM,GAC7Ep1I,KAAKk1I,eAAetwH,Q,CACpB,MAAO9c,GAEP,MADA9H,KAAK2H,WAAWI,MAAMD,GAChBA,C,CAEV,G,GF+PIktI,KAAM,CACJx+H,GACAw/B,GACAv/B,GACA+9D,KAGJ,CACE92E,QAAS62E,GACT9D,SG5RC,MACL3zE,YAAoBgF,EAA4C6F,GAA5C,KAAA7F,iBAAAA,EAA4C,KAAA6F,WAAAA,CAAyB,CAEnFid,S,0CACJ,IACE5kB,KAAK8B,iBAAiBQ,KAAK,S,CAC3B,MAAOwF,GAEP,MADA9H,KAAK2H,WAAWI,MAAMD,GAChBA,C,CAEV,G,GHmRIktI,KAAM,CAACvzI,GAA6BgV,KAEtC,CACE/Y,QAAS82E,GACTzlC,YAAawlC,IAEf,CACE72E,QIrSC,MAAP,cACE,KAAA86E,cAAgB,IAAI68D,GAAA,CAGtB,GJkSM5kE,SAAU,GACVukE,KAAM,CAACx+H,GAAuB6B,KAEhC,CAAE3a,QAAS+Y,GAAYs+H,WAAY,IAAM,IAAIrkC,IAAkB,IAC/D,CACEhzG,QAAS+1D,GACTgd,SAAU,GACVukE,KAAM,CAACt7H,GAA0Bja,GAAwB4Y,KAE3D,CACE3a,QAAS0F,GACTqtE,SAAU,GACVukE,KAAM,CAAC38H,KAET,CACE3a,QAAS49C,GACTm1B,SAAU,GACVukE,KAAM,CAACpnH,GAAkCnX,GAAY4B,KAEvD,CAAE3a,QAASwvE,GAAyBuD,SAAU,GAAcukE,KAAM,CAAC38H,KACnE,CACE3a,QAASgc,GACT+2D,SAAU,GACVukE,KAAM,CACJpnH,GACA+mD,GACAxxE,GACAsT,GACA4B,KAGJ,CACE3a,QAASiwB,GACT8iD,SAAU,GACVukE,KAAM,CAACt7H,GAA0Byd,GAA0B9e,KAE7D,CACE3a,QAASqjC,GACT0vC,SAAU,GACVukE,KAAM,CAACt7H,GAA0BrB,GAAyB7B,KAE5D,CACE9Y,QAAS8Y,GACTi6D,SAAU,GACVukE,KAAM,CACJ9nE,GACA/pE,GACAC,GACAsqB,GACAwmD,KAGJ,CACEx2E,QAASm3E,GACTpE,SAAU,GACVukE,KAAM,CAACv+H,GAAYD,KAErB,CACE9Y,QAAS2zB,GACTo/C,SAAU,GACVukE,KAAM,CACJx+H,GACAw+D,GACA56B,GACAmZ,GACA75C,GACA+5C,GACAhyD,GACA01B,GACA+Q,GACAzxB,GACA/U,GACA2W,GACA08D,GACA16B,GACA1B,GACAu7B,KAGJ,CAAEx2E,QAASqiC,GAA+B0wC,SAAU,IACpD,CACE/yE,QAASs3E,GACTvE,SAAU,GACVukE,KAAM,CAAC38H,KAET,CACE3a,QAASkc,GACT62D,SAAU,GACVukE,KAAM,CACJt7H,GACAwzD,GACA/1C,GACA9e,KAGJ,CACE3a,QAASic,GACT82D,SAAU,GACVukE,KAAM,CACJzhF,GACAnZ,GACAqZ,GACA/5C,GACAvW,GACA1B,GACAguC,GACA/tC,GACA2W,GACA7W,GACAoY,GACAu6D,GACAD,KAGJ,CACEx2E,QAAS2a,GACTo4D,SAAU,GACVukE,KAAM,CACJ9/D,GACAnB,GACAD,GACAr9D,GACAw+D,GACAjB,GACAC,KAGJ,CACEv2E,QAASu3E,GACTxE,SAAU,GACVukE,KAAM,CAAC9/D,GAAwBnB,GAAgBC,KAEjD,CACEt2E,QAASo4C,GACT26B,SAAU,GACVukE,KAAM,CACJ56F,GACAmZ,GACA/8C,GACAkD,GACAkU,KAGJ,CACElwB,QAAS+xC,GACTghC,SAAU,GACVukE,KAAM,CAACzhF,GAA0B98C,GAAYhX,KAE/C,CACE/B,QAASo3E,GACTrE,SAAU,GACVukE,KAAM,CACJ3jH,GACA3D,GACAlX,GACApT,GACA8wE,GACAz9D,GACA4B,GACA7W,KAGJ,CACE9D,QAASkwB,GACT6iD,SAAU8/D,GACVyE,KAAM,CAACnhE,KAET,CACEn2E,QAASi3E,GACTogE,WA0JN,SACEO,EACA3tI,EACA2xG,GAEA,OAAOhyG,GAAY,yBACf,IAAIkzG,GAAwC86B,EAAuB3tI,EAAY2xG,GAC/E,IAAID,GAA6Bi8B,EAAuB3tI,E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AGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAA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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/common/src/models/domain/environment-urls.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/misc/flags.ts","webpack:///./src/flags.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/services/browser-environment.service.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/common/src/models/domain/enc-string.ts","webpack:///../../libs/common/src/models/domain/domain-base.ts","webpack:///../../libs/common/src/models/domain/master-password-policy-options.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./src/popup/accounts/environment.component.ts","webpack:///../../libs/common/src/models/request/password-hint.request.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/common/src/abstractions/login.service.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///../../libs/common/src/abstractions/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./src/popup/accounts/home.component.ts","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///../../libs/common/src/models/request/secret-verification.request.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/log-in-credentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///../../libs/common/src/models/request/keys.request.ts","webpack:///../../libs/common/src/models/request/register.request.ts","webpack:///../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack:///../../libs/common/src/models/request/set-password.request.ts","webpack:///../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack:///../../libs/common/src/models/request/two-factor-email.request.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/update-temp-password.request.ts","webpack:///../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/send-file.view.ts","webpack:///../../libs/common/src/models/view/send-text.view.ts","webpack:///../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack:///../../libs/common/src/models/view/send.view.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/browser-state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/encryptedExportType.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event/event-collection.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folder.view.ts","webpack:///../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack:///./src/popup/settings/about.component.html","webpack:///./src/popup/settings/about.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/item.view.ts","webpack:///../../libs/common/src/services/cryptography/initializer-key.ts","webpack:///../../libs/common/src/models/view/card.view.ts","webpack:///../../libs/common/src/models/view/attachment.view.ts","webpack:///../../libs/common/src/models/view/field.view.ts","webpack:///../../libs/common/src/models/view/identity.view.ts","webpack:///../../libs/common/src/models/view/login-uri.view.ts","webpack:///../../libs/common/src/models/view/login.view.ts","webpack:///../../libs/common/src/models/view/password-history.view.ts","webpack:///../../libs/common/src/models/view/secure-note.view.ts","webpack:///../../libs/common/src/models/view/cipher.view.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/domain/enc-array-buffer.ts","webpack:///../../libs/common/src/models/response/base.response.ts","webpack:///../../libs/common/src/models/response/error.response.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/common/src/models/domain/tree-node.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/common/src/types/checkable.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/angular/src/components/vault-items.component.ts","webpack:///./src/popup/vault/vault-items.component.html","webpack:///./src/popup/vault/vault-items.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/angular/src/services/injection-tokens.ts","webpack:///../../libs/common/src/abstractions/account/account.service.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/encrypt.service.ts","webpack:///../../libs/common/src/abstractions/event/event-upload.service.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/data/server-config.data.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/models/domain/window-state.ts","webpack:///../../libs/common/src/models/domain/global-state.ts","webpack:///../../libs/common/src/models/request/update-avatar.request.ts","webpack:///../../libs/common/src/services/account/avatar-update.service.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notification.response.ts","webpack:///../../libs/common/src/services/anonymousHub.service.ts","webpack:///../../libs/common/src/models/request/device.request.ts","webpack:///../../libs/common/src/models/request/identity-token/token.request.ts","webpack:///../../libs/common/src/models/request/identity-token/user-api-token.request.ts","webpack:///../../libs/common/src/models/response/api-key.response.ts","webpack:///../../libs/common/src/models/api/card.api.ts","webpack:///../../libs/common/src/models/api/field.api.ts","webpack:///../../libs/common/src/models/api/identity.api.ts","webpack:///../../libs/common/src/models/api/login-uri.api.ts","webpack:///../../libs/common/src/models/api/login.api.ts","webpack:///../../libs/common/src/models/api/secure-note.api.ts","webpack:///../../libs/common/src/models/response/attachment.response.ts","webpack:///../../libs/common/src/models/response/password-history.response.ts","webpack:///../../libs/common/src/models/response/cipher.response.ts","webpack:///../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack:///../../libs/common/src/models/response/auth-request.response.ts","webpack:///../../libs/common/src/models/response/authentication/register.response.ts","webpack:///../../libs/common/src/models/response/billing.response.ts","webpack:///../../libs/common/src/models/response/billing-history.response.ts","webpack:///../../libs/common/src/models/response/billing-payment.response.ts","webpack:///../../libs/common/src/models/response/breach-account.response.ts","webpack:///../../libs/common/src/models/response/selection-read-only.response.ts","webpack:///../../libs/common/src/models/response/collection.response.ts","webpack:///../../libs/common/src/models/response/device-verification.response.ts","webpack:///../../libs/common/src/models/response/global-domain.response.ts","webpack:///../../libs/common/src/models/response/domains.response.ts","webpack:///../../libs/common/src/models/response/emergency-access.response.ts","webpack:///../../libs/common/src/models/response/event.response.ts","webpack:///../../libs/common/src/models/response/group.response.ts","webpack:///../../libs/common/src/models/response/identity-captcha.response.ts","webpack:///../../libs/common/src/models/response/identity-token.response.ts","webpack:///../../libs/common/src/models/response/identity-two-factor.response.ts","webpack:///../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack:///../../libs/common/src/models/response/list.response.ts","webpack:///../../libs/common/src/models/response/organization-connection.response.ts","webpack:///../../libs/common/src/models/response/organization-export.response.ts","webpack:///../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack:///../../libs/common/src/models/api/permissions.api.ts","webpack:///../../libs/common/src/models/response/profile-organization.response.ts","webpack:///../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack:///../../libs/common/src/models/response/profile-provider.response.ts","webpack:///../../libs/common/src/models/response/profile.response.ts","webpack:///../../libs/common/src/models/response/payment.response.ts","webpack:///../../libs/common/src/models/response/plan.response.ts","webpack:///../../libs/common/src/models/response/policy.response.ts","webpack:///../../libs/common/src/models/response/prelogin.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack:///../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack:///../../libs/common/src/models/response/provider/provider-user.response.ts","webpack:///../../libs/common/src/models/response/provider/provider.response.ts","webpack:///../../libs/common/src/models/api/send-file.api.ts","webpack:///../../libs/common/src/models/api/send-text.api.ts","webpack:///../../libs/common/src/models/response/send-access.response.ts","webpack:///../../libs/common/src/models/response/send-file-download-data.response.ts","webpack:///../../libs/common/src/models/response/send.response.ts","webpack:///../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack:///../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack:///../../libs/common/src/models/response/subscription.response.ts","webpack:///../../libs/common/src/models/response/folder.response.ts","webpack:///../../libs/common/src/models/response/sync.response.ts","webpack:///../../libs/common/src/models/response/tax-info.response.ts","webpack:///../../libs/common/src/models/response/tax-rate.response.ts","webpack:///../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack:///../../libs/common/src/models/response/two-factor-duo.response.ts","webpack:///../../libs/common/src/models/response/two-factor-email.response.ts","webpack:///../../libs/common/src/models/response/two-factor-provider.response.ts","webpack:///../../libs/common/src/models/response/two-factor-recover.response.ts","webpack:///../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack:///../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack:///../../libs/common/src/models/response/user-key.response.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack:///../../libs/common/src/models/domain/auth-result.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/user-api-login.strategy.ts","webpack:///../../libs/common/src/models/request/prelogin.request.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachment.data.ts","webpack:///../../libs/common/src/models/data/card.data.ts","webpack:///../../libs/common/src/models/data/field.data.ts","webpack:///../../libs/common/src/models/data/identity.data.ts","webpack:///../../libs/common/src/models/data/login-uri.data.ts","webpack:///../../libs/common/src/models/data/login.data.ts","webpack:///../../libs/common/src/models/data/password-history.data.ts","webpack:///../../libs/common/src/models/data/secure-note.data.ts","webpack:///../../libs/common/src/models/data/cipher.data.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/login-uri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secure-note.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack:///../../libs/common/src/models/request/attachment.request.ts","webpack:///../../libs/common/src/models/request/cipher.request.ts","webpack:///../../libs/common/src/models/request/cipher-with-id.request.ts","webpack:///../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack:///../../libs/common/src/models/request/cipher-collections.request.ts","webpack:///../../libs/common/src/models/request/cipher-create.request.ts","webpack:///../../libs/common/src/models/request/cipher-partial.request.ts","webpack:///../../libs/common/src/models/request/cipher-share.request.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/data/collection.data.ts","webpack:///../../libs/common/src/models/view/collection.view.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/models/response/server-config.response.ts","webpack:///../../libs/common/src/abstractions/config/server-config.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/models/domain/encrypted-object.ts","webpack:///../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack:///../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack:///../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack:///../../libs/common/src/models/data/event.data.ts","webpack:///../../libs/common/src/services/event/event-collection.service.ts","webpack:///../../libs/common/src/models/request/event.request.ts","webpack:///../../libs/common/src/services/event/event-upload.service.ts","webpack:///../../libs/common/src/models/export/card.export.ts","webpack:///../../libs/common/src/models/export/field.export.ts","webpack:///../../libs/common/src/models/export/identity.export.ts","webpack:///../../libs/common/src/models/export/login-uri.export.ts","webpack:///../../libs/common/src/models/export/login.export.ts","webpack:///../../libs/common/src/models/export/secure-note.export.ts","webpack:///../../libs/common/src/models/export/cipher.export.ts","webpack:///../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack:///../../libs/common/src/models/export/collection.export.ts","webpack:///../../libs/common/src/models/export/collection-with-id.export.ts","webpack:///../../libs/common/src/models/export/event.export.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folder.export.ts","webpack:///../../libs/common/src/models/export/folder-with-id.export.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folder.data.ts","webpack:///../../libs/common/src/models/request/folder.request.ts","webpack:///../../libs/common/src/services/folder/folder-api.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/services/folder/folder.service.ts","webpack:///../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack:///../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/services/login.service.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack:///../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack:///../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack:///../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack:///../../libs/common/src/models/response/keys.response.ts","webpack:///../../libs/common/src/models/response/organization-keys.response.ts","webpack:///../../libs/common/src/models/response/organization.response.ts","webpack:///../../libs/common/src/models/response/organization-subscription.response.ts","webpack:///../../libs/common/src/models/api/sso-config.api.ts","webpack:///../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/services/organization/organization.service.ts","webpack:///../../libs/common/src/models/domain/generated-password-history.ts","webpack:///../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policy.data.ts","webpack:///../../libs/common/src/services/policy/policy-api.service.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/send-file.data.ts","webpack:///../../libs/common/src/models/data/send-text.data.ts","webpack:///../../libs/common/src/models/data/send.data.ts","webpack:///../../libs/common/src/models/domain/send-file.ts","webpack:///../../libs/common/src/models/domain/send-text.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/send.request.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/models/data/provider.data.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organization.data.ts","webpack:///../../libs/common/src/services/sync/sync.service.ts","webpack:///../../libs/common/src/services/sync/syncNotifier.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack:///../../libs/common/src/models/request/account/verify-otp.request.ts","webpack:///../../libs/common/src/services/userVerification/userVerification.service.ts","webpack:///../../libs/common/src/email-forwarders/anon-addy-forwarder.ts","webpack:///../../libs/common/src/email-forwarders/duck-duck-go-forwarder.ts","webpack:///../../libs/common/src/email-forwarders/fastmail-forwarder.ts","webpack:///../../libs/common/src/email-forwarders/firefox-relay-forwarder.ts","webpack:///../../libs/common/src/email-forwarders/forwarder-options.ts","webpack:///../../libs/common/src/email-forwarders/simple-login-forwarder.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack:///../../libs/common/src/models/domain/decrypt-parameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/theming/themeBuilder.ts","webpack:///../../libs/angular/src/services/theming/theming.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/abstractions/account/account-api.service.ts","webpack:///../../libs/common/src/services/account/account-api.service.ts","webpack:///../../libs/common/src/services/account/account.service.ts","webpack:///../../libs/common/src/abstractions/account/avatar-update.service.ts","webpack:///../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack:///../../libs/common/src/services/formValidationErrors.service.ts","webpack:///../../libs/common/src/services/organization/organization-api.service.ts","webpack:///../../libs/common/src/services/config/config.service.ts","webpack:///../../libs/common/src/services/config/config-api.service.ts","webpack:///../../libs/common/src/abstractions/anonymousHub.service.ts","webpack:///../../libs/common/src/services/validation.service.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/memoryStorage.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/background/service_factories/factory-options.ts","webpack:///./src/services/abstractChromeStorageApi.service.ts","webpack:///./src/services/browserLocalStorage.service.ts","webpack:///./src/services/browserMemoryStorage.service.ts","webpack:///./src/services/localBackedSessionStorage.service.ts","webpack:///./src/background/service_factories/crypto-function-service.factory.ts","webpack:///./src/background/service_factories/log-service.factory.ts","webpack:///./src/decorators/dev-flag.decorator.ts","webpack:///./src/background/service_factories/encrypt-service.factory.ts","webpack:///./src/services/keyGeneration.service.ts","webpack:///./src/background/service_factories/storage-service.factory.ts","webpack:///./src/background/service_factories/key-generation-service.factory.ts","webpack:///./src/background/service_factories/app-id-service.factory.ts","webpack:///./src/decorators/session-sync-observable/session-syncer.ts","webpack:///./src/decorators/session-sync-observable/sync-item-metadata.ts","webpack:///./src/decorators/session-sync-observable/browser-session.decorator.ts","webpack:///./src/decorators/session-sync-observable/session-sync.decorator.ts","webpack:///./src/models/account.ts","webpack:///./src/services/browser-state.service.ts","webpack:///./src/background/service_factories/state-service.factory.ts","webpack:///./src/background/service_factories/state-migration-service.factory.ts","webpack:///./src/background/service_factories/environment-service.factory.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/background/service_factories/messaging-service.factory.ts","webpack:///./src/background/service_factories/platform-utils-service.factory.ts","webpack:///./src/background/service_factories/token-service.factory.ts","webpack:///./src/background/service_factories/api-service.factory.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/background/service_factories/crypto-service.factory.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/background/service_factories/i18n-service.factory.ts","webpack:///./src/services/browser-organization.service.ts","webpack:///./src/background/service_factories/key-connector-service.factory.ts","webpack:///./src/background/service_factories/organization-service.factory.ts","webpack:///./src/background/service_factories/auth-service.factory.ts","webpack:///./src/background/service_factories/two-factor-service.factory.ts","webpack:///./src/services/browser-settings.service.ts","webpack:///./src/background/service_factories/cipher-service.factory.ts","webpack:///./src/background/service_factories/settings-service.factory.ts","webpack:///./src/background/service_factories/file-upload-service.factory.ts","webpack:///./src/listeners/update-badge.ts","webpack:///./src/background/service_factories/search-service.factory.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./src/services/browser-folder.service.ts","webpack:///./src/services/browser-policy.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/vaultTimeout/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack:///./src/services/browserFileDownloadService.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\nimport { GroupPolicyEnvironment } from \"./types/group-policy-environment\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {\n  storeSessionDecrypted?: boolean;\n  managedEnvironment?: GroupPolicyEnvironment;\n} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\n\nimport { devFlagEnabled, devFlagValue } from \"../flags\";\nimport { GroupPolicyEnvironment } from \"../types/group-policy-environment\";\n\nexport class BrowserEnvironmentService extends EnvironmentService {\n  constructor(stateService: StateService, private logService: LogService) {\n    super(stateService);\n  }\n\n  async hasManagedEnvironment(): Promise<boolean> {\n    try {\n      return (await this.getManagedEnvironment()) != null;\n    } catch (e) {\n      this.logService.error(e);\n      return false;\n    }\n  }\n\n  async settingsHaveChanged() {\n    if (!(await this.hasManagedEnvironment())) {\n      return false;\n    }\n\n    const env = await this.getManagedEnvironment();\n\n    return (\n      env.base != this.baseUrl ||\n      env.webVault != this.webVaultUrl ||\n      env.api != this.webVaultUrl ||\n      env.identity != this.identityUrl ||\n      env.icons != this.iconsUrl ||\n      env.notifications != this.notificationsUrl ||\n      env.events != this.eventsUrl\n    );\n  }\n\n  getManagedEnvironment(): Promise<GroupPolicyEnvironment> {\n    return devFlagEnabled(\"managedEnvironment\")\n      ? new Promise((resolve) => resolve(devFlagValue(\"managedEnvironment\")))\n      : new Promise((resolve, reject) => {\n          if (chrome.storage.managed == null) {\n            return resolve(null);\n          }\n\n          chrome.storage.managed.get(\"environment\", (result) => {\n            if (chrome.runtime.lastError) {\n              return reject(chrome.runtime.lastError);\n            }\n\n            resolve(result.environment);\n          });\n        });\n  }\n\n  async setUrlsToManagedEnvironment() {\n    const env = await this.getManagedEnvironment();\n    await this.setUrls({\n      base: env.base,\n      webVault: env.webVault,\n      api: env.api,\n      identity: env.identity,\n      icons: env.icons,\n      notifications: env.notifications,\n      events: env.events,\n    });\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"close\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'settingsEdited' | i18n }}\"\n      *ngIf=\"showEditedManagedSettings\"\n    >\n      <a href=\"#\" appStopClick (click)=\"resetEnvironment()\">\n        {{ \"environmentEditedClick\" | i18n }}\n      </a>\n      {{ \"environmentEditedReset\" | i18n }}\n    </app-callout>\n\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            aria-describedby=\"baseUrlHelp\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div id=\"baseUrlHelp\" class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div\n        role=\"group\"\n        attr.aria-label=\"{{ 'customEnvironment' | i18n }}\"\n        aria-describedby=\"customEnvironmentHelp\"\n        class=\"box-content\"\n        [hidden]=\"!showCustom\"\n      >\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div id=\"customEnvironmentHelp\" class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"@bitwarden/angular/components/environment.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent implements OnInit {\n  showEditedManagedSettings = false;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    public environmentService: BrowserEnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  async ngOnInit() {\n    this.showEditedManagedSettings = await this.environmentService.settingsHaveChanged();\n  }\n\n  async resetEnvironment() {\n    const urls = await this.environmentService.getManagedEnvironment();\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.iconsUrl = urls.icons;\n    this.identityUrl = urls.identity;\n    this.notificationsUrl = urls.notifications;\n    this.iconsUrl = urls.icons;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putAvatar: (request: UpdateAvatarRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService,\n    private route: ActivatedRoute,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n\n    super.onSuccessfulSubmit = async () => {\n      this.router.navigate([this.successRoute]);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            aria-describedby=\"emailHelp\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div id=\"emailHelp\" class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n\n  getAvatarColor: (options?: StorageOptions) => Promise<string | null | undefined>;\n  setAvatarColor: (value: string, options?: StorageOptions) => Promise<void>;\n}\n","<div class=\"center-content\">\n  <div class=\"content login-page\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <form #form [formGroup]=\"formGroup\" (ngSubmit)=\"submit()\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n          </div>\n          <div class=\"box-footer no-margin\" *ngIf=\"selfHostedDomain\">\n            {{ \"loggingInTo\" | i18n: selfHostedDomain }}\n          </div>\n          <div class=\"remember-email-check\">\n            <input\n              id=\"rememberEmail\"\n              type=\"checkbox\"\n              name=\"rememberEmail\"\n              formControlName=\"rememberEmail\"\n            />\n            <label for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <button type=\"submit\" class=\"btn primary block\">\n          <b>{{ \"continue\" | i18n }}</b>\n        </button>\n      </div>\n    </form>\n    <p class=\"createAccountLink\">\n      {{ \"newAroundHere\" | i18n }}\n      <a routerLink=\"/register\" (click)=\"setFormValues()\">{{ \"createAccount\" | i18n }}</a>\n    </p>\n  </div>\n</div>\n<button type=\"button\" routerLink=\"/environment\" class=\"settings-icon\" (click)=\"setFormValues()\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</button>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent implements OnInit {\n  loginInitiated = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    rememberEmail: [false],\n  });\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private route: ActivatedRoute,\n    private loginService: LoginService\n  ) {}\n  async ngOnInit(): Promise<void> {\n    let savedEmail = this.loginService.getEmail();\n    const rememberEmail = this.loginService.getRememberEmail();\n\n    if (savedEmail != null) {\n      this.formGroup.patchValue({\n        email: savedEmail,\n        rememberEmail: rememberEmail,\n      });\n    } else {\n      savedEmail = await this.stateService.getRememberedEmail();\n      if (savedEmail != null) {\n        this.formGroup.patchValue({\n          email: savedEmail,\n          rememberEmail: true,\n        });\n      }\n    }\n  }\n\n  submit() {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.invalid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccured\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n    this.router.navigate([\"login\"], { queryParams: { email: this.formGroup.value.email } });\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>,\n    private win: Window & typeof globalThis\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (BrowserPlatformUtilsService.isFirefox()) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (BrowserPlatformUtilsService.isOpera(this.win)) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (BrowserPlatformUtilsService.isEdge()) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (BrowserPlatformUtilsService.isVivaldi()) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if (BrowserPlatformUtilsService.isChrome(this.win)) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (BrowserPlatformUtilsService.isSafari(this.win)) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  static isFirefox(): boolean {\n    return (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    );\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  static isChrome(win: Window & typeof globalThis): boolean {\n    return win.chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  static isEdge(): boolean {\n    return navigator.userAgent.indexOf(\" Edg/\") !== -1;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  static isOpera(win: Window & typeof globalThis): boolean {\n    return (\n      (!!win.opr && !!win.opr.addons) || !!win.opera || navigator.userAgent.indexOf(\" OPR/\") >= 0\n    );\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  static isVivaldi(): boolean {\n    return navigator.userAgent.indexOf(\" Vivaldi/\") !== -1;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  static isSafari(win: Window & typeof globalThis): boolean {\n    // Opera masquerades as Safari, so make sure we're not there first\n    return (\n      !BrowserPlatformUtilsService.isOpera(win) && navigator.userAgent.indexOf(\" Safari/\") !== -1\n    );\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = this.win;\n    let doc = this.win.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = this.win;\n    let doc = this.win.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if (this.win.chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport { TabMessage } from \"../types/tab-messages\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static get manifestVersion() {\n    return chrome.runtime.getManifest().manifest_version;\n  }\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTab(tabId: number) {\n    if (tabId == null) {\n      return null;\n    }\n    return await chrome.tabs.get(tabId);\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static sendTabsMessage<T = never>(\n    tabId: number,\n    message: TabMessage,\n    responseCallback?: (response: T) => void\n  ) {\n    chrome.tabs.sendMessage<TabMessage, T>(tabId, message, responseCallback);\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static sendMessage(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    return chrome.runtime.sendMessage(message);\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return (win.location as any).reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n\n  static getBrowserAction() {\n    return BrowserApi.manifestVersion === 3 ? chrome.action : chrome.browserAction;\n  }\n\n  static getSidebarAction(win: Window & typeof globalThis) {\n    return BrowserPlatformUtilsService.isSafari(win)\n      ? null\n      : typeof win.opr !== \"undefined\" && win.opr.sidebarAction\n      ? win.opr.sidebarAction\n      : win.chrome.sidebarAction;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"main\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"main\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","<app-callout class=\"app-private-mode-warning\" type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              aria-describedby=\"masterPasswordHelp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div id=\"masterPasswordHelp\" class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer no-pad\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    route: ActivatedRoute,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n\n  async launchSsoBrowser() {\n    await this.loginService.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <h1 class=\"login-center\">\n      <span class=\"title\">{{ \"logIn\" | i18n }}</span>\n    </h1>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"masterPassword\"\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <button type=\"button\" class=\"btn link\" routerLink=\"/hint\" (click)=\"setFormValues()\">\n          <b>{{ \"getMasterPasswordHint\" | i18n }}</b>\n        </button>\n      </div>\n    </div>\n    <app-private-mode-warning></app-private-mode-warning>\n    <div class=\"content login-buttons\">\n      <button type=\"submit\" class=\"btn primary block\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\"\n          ><b>{{ \"logInWithMasterPassword\" | i18n }}</b></span\n        >\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n      <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n        <i class=\"bwi bwi-provider\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n      </button>\n      <div class=\"small\">\n        <p class=\"no-margin\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n        <a routerLink=\"/home\">{{ \"notYou\" | i18n }}</a>\n      </div>\n    </div>\n  </main>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                aria-describedby=\"masterPasswordHelp\"\n                class=\"monospaced\"\n                formControlName=\"masterPassword\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"formGroup.get('masterPassword')?.value\"\n            [email]=\"formGroup.get('email')?.value\"\n            [name]=\"formGroup.get('name')?.value\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n      <div id=\"masterPasswordHelp\" class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"confirmMasterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" aria-describedby=\"hintHelp\" formControlName=\"hint\" />\n        </div>\n      </div>\n      <div id=\"hintHelp\" class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input type=\"checkbox\" id=\"acceptPolicies\" formControlName=\"acceptPolicies\" />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  color: string;\n  text: string;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   */\n  abstract getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">\n                  {{ \"masterPass\" | i18n }}\n                  <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                    {{ text }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  aria-describedby=\"masterPasswordHelp\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n\n            <app-password-strength\n              [password]=\"masterPassword\"\n              [email]=\"email\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n              (passwordScoreColor)=\"getPasswordScoreText($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n        <div id=\"masterPasswordHelp\" class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input\n              id=\"hint\"\n              type=\"text\"\n              name=\"Hint\"\n              aria-describedby=\"hintHelp\"\n              [(ngModel)]=\"hint\"\n            />\n          </div>\n        </div>\n        <div id=\"hintHelp\" class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/2fa\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"back\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\">\n        <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    super.onSuccessfulLogin = () => {\n      this.loginService.clearValues();\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"masterPassword\"\n            [email]=\"email\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" aria-describedby=\"hintHelp\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div id=\"hintHelp\" class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"$any(form).loading ? false : regenerate()\"\n        [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"$any(form).loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">\n                {{ o.desc }}\n              </div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"listbox\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\">{{ \"service\" | i18n }}</label>\n          <select\n            id=\"ForwardTypeDropdown\"\n            name=\"ForwardType\"\n            [(ngModel)]=\"usernameOptions.forwardedService\"\n            (change)=\"saveUsernameOptions()\"\n          >\n            <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"duckduckgo-apikey\"\n              type=\"password\"\n              name=\"DuckDuckGoApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"fastmail-apiToken\"\n              type=\"password\"\n              name=\"FastmailApiToken\"\n              [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\nimport { Account } from \"../../models/account\";\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\n\nexport abstract class BrowserStateService extends BaseStateServiceAbstraction<Account> {\n  abstract hasInSessionMemory(key: string): Promise<boolean>;\n  abstract getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T>;\n  abstract setInSessionMemory(key: string, value: any): Promise<void>;\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserVaultItemsComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserVaultItemsComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            aria-describedby=\"deletionDateHelp\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div id=\"deletionDateHelp\" class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            aria-describedby=\"expirationDateHelp\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div id=\"expirationDateHelp\" class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            aria-describedby=\"deletionDateHelp\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            aria-describedby=\"deletionDateHelp\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          aria-describedby=\"deletionDateHelp\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            aria-describedby=\"expirationDateHelp\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            aria-describedby=\"expirationDateHelp\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          aria-describedby=\"expirationDateHelp\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            aria-describedby=\"nameHelp\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div id=\"nameHelp\" class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            name=\"file\"\n            aria-describedby=\"fileHelp\"\n            required\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div id=\"fileHelp\" class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            aria-describedby=\"textHelp\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div id=\"textHelp\" class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-right bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          {{ \"options\" | i18n }}\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              aria-describedby=\"maximumAccessCountHelp\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div id=\"maximumAccessCountHelp\" class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                aria-describedby=\"passwordHelp\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div id=\"passwordHelp\" class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              aria-describedby=\"notesHelp\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div id=\"notesHelp\" class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"$any(deleteBtn).loading\"></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!$any(deleteBtn).loading\"\n              ></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\n\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: BrowserStateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await super.ngOnInit();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n\n  static fromJSON(json: Jsonify<BrowserComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserComponentState(), json);\n  }\n}\n","import { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { DeepJsonify } from \"@bitwarden/common/types/deep-jsonify\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n\n  toJSON() {\n    return Utils.merge(this, {\n      typeCounts: Utils.mapToRecord(this.typeCounts),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<BrowserSendComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserSendComponentState(), json, {\n      sends: json.sends?.map((s) => SendView.fromJSON(s)),\n      typeCounts: Utils.recordToMap(json.typeCounts),\n    });\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: BrowserStateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = Object.assign(new BrowserSendComponentState(), {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    });\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: BrowserStateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\">{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti single-line\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  existingExcludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n        this.existingExcludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    const newExcludedDomains = this.getNewlyAddedDomians(this.excludedDomains);\n    for (const domain of this.excludedDomains) {\n      const resp = newExcludedDomains.filter((e) => e.uri === domain.uri);\n      if (resp.length === 0) {\n        savedDomains[domain.uri] = null;\n      } else {\n        if (domain.uri && domain.uri !== \"\") {\n          const validDomain = Utils.getHostname(domain.uri);\n          if (!validDomain) {\n            this.platformUtilsService.showToast(\n              \"error\",\n              null,\n              this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n            );\n            return;\n          }\n          savedDomains[validDomain] = null;\n        }\n      }\n    }\n\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  getNewlyAddedDomians(domain: ExcludedDomain[]): ExcludedDomain[] {\n    const result = this.excludedDomains.filter(\n      (newDomain) =>\n        !this.existingExcludedDomains.some((oldDomain) => newDomain.uri === oldDomain.uri)\n    );\n    return result;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EncryptedExportType {\n  AccountEncrypted = 0,\n  FileEncrypted = 1,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Directive, EventEmitter, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { merge, takeUntil, Subject, startWith } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { EncryptedExportType } from \"@bitwarden/common/enums/encryptedExportType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit, OnDestroy {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n    filePassword: [\"\", Validators.required],\n    confirmFilePassword: [\"\", Validators.required],\n    fileEncryptionType: [EncryptedExportType.AccountEncrypted],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventCollectionService: EventCollectionService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: UntypedFormBuilder,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisablePersonalVaultExport)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disabledByPolicy = policyAppliesToActiveUser;\n      });\n\n    await this.checkExportDisabled();\n\n    merge(\n      this.exportForm.get(\"format\").valueChanges,\n      this.exportForm.get(\"fileEncryptionType\").valueChanges\n    )\n      .pipe(takeUntil(this.destroy$))\n      .pipe(startWith(0))\n      .subscribe(() => this.adjustValidators());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  async checkExportDisabled() {\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  protected async doExport() {\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n      this.exportForm.clearValidators();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n    const secret = this.exportForm.get(\"secret\").value;\n\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    this.doExport();\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    if (\n      this.format === \"encrypted_json\" &&\n      this.fileEncryptionType === EncryptedExportType.FileEncrypted\n    ) {\n      return this.exportService.getPasswordProtectedExport(this.filePassword);\n    } else {\n      return this.exportService.getExport(this.format, null);\n    }\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<void> {\n    await this.eventCollectionService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  get filePassword() {\n    return this.exportForm.get(\"filePassword\").value;\n  }\n\n  get confirmFilePassword() {\n    return this.exportForm.get(\"confirmFilePassword\").value;\n  }\n\n  get fileEncryptionType() {\n    return this.exportForm.get(\"fileEncryptionType\").value;\n  }\n\n  adjustValidators() {\n    this.exportForm.get(\"confirmFilePassword\").reset();\n    this.exportForm.get(\"filePassword\").reset();\n\n    if (this.encryptedFormat && this.fileEncryptionType == EncryptedExportType.FileEncrypted) {\n      this.exportForm.controls.filePassword.enable();\n      this.exportForm.controls.confirmFilePassword.enable();\n    } else {\n      this.exportForm.controls.filePassword.disable();\n      this.exportForm.controls.confirmFilePassword.disable();\n    }\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.fileDownloadService.download({\n      fileName: fileName,\n      blobData: csv,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.isManager;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canManageCollections(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canViewAssignedCollections\n  );\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return canAccessMembersTab(org) || canAccessGroupsTab(org) || canManageCollections(org);\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org) ||\n    canAccessManageTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!this.organizationService.hasOrganizations()) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: this.organizationService.get(this.organizationId).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      aria-describedby=\"confirmIdentityHelp\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div id=\"confirmIdentityHelp\" class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"@bitwarden/angular/components/export.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventCollectionService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/folders\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"$any(deleteBtn).loading\"></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!$any(deleteBtn).loading\"\n              ></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addFolder()\" appA11yTitle=\"{{ 'addFolder' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"(folders$ | async)?.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders$ | async\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!(folders$ | async)?.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, Observable } from \"rxjs\";\n\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent {\n  folders$: Observable<FolderView[]>;\n\n  constructor(private folderService: FolderService, private router: Router) {\n    this.folders$ = this.folderService.folderViews$.pipe(\n      map((folders) => {\n        if (folders.length > 0) {\n          folders = folders.slice(0, folders.length - 1);\n        }\n\n        return folders;\n      })\n    );\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-right bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        General\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            aria-describedby=\"defaultUriMatchHelp\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div id=\"defaultUriMatchHelp\" class=\"box-footer\">\n        {{ \"defaultUriMatchDetectionDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            aria-describedby=\"clearClipboardHelp\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div id=\"clearClipboardHelp\" class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"enableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            aria-describedby=\"totpHelp\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"enableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div id=\"totpHelp\" class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"enableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            aria-describedby=\"addlogin-notification-barHelp\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"enableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div id=\"addlogin-notification-barHelp\" class=\"box-footer\">\n        {{ \"addLoginNotificationDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"enableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            aria-describedby=\"changedpass-notification-barHelp\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"enableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div id=\"changedpass-notification-barHelp\" class=\"box-footer\">\n        {{ \"changedPasswordNotificationDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"enableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            aria-describedby=\"context-menuHelp\"\n            (change)=\"updateContextMenuItem()\"\n            [(ngModel)]=\"enableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div id=\"context-menuHelp\" class=\"box-footer\">{{ \"contextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-right bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        Display\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showCardsCurrentTab\">{{ \"showCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showCardsCurrentTab\"\n            type=\"checkbox\"\n            aria-describedby=\"showCardsCurrentTabHelp\"\n            (change)=\"updateShowCardsCurrentTab()\"\n            [(ngModel)]=\"showCardsCurrentTab\"\n          />\n        </div>\n      </div>\n      <div id=\"showCardsCurrentTabHelp\" class=\"box-footer\">\n        {{ \"showCardsCurrentTabDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showIdentitiesCurrentTab\">{{ \"showIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showIdentitiesCurrentTab\"\n            type=\"checkbox\"\n            aria-describedby=\"showIdentitiesCurrentTabHelp\"\n            (change)=\"updateShowIdentitiesCurrentTab()\"\n            [(ngModel)]=\"showIdentitiesCurrentTab\"\n          />\n        </div>\n      </div>\n      <div id=\"showIdentitiesCurrentTabHelp\" class=\"box-footer\">\n        {{ \"showIdentitiesCurrentTabDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"enableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            aria-describedby=\"faviconHelp\"\n            (change)=\"updateFavicon()\"\n            [(ngModel)]=\"enableFavicon\"\n          />\n        </div>\n      </div>\n      <div id=\"faviconHelp\" class=\"box-footer\">{{ \"faviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"enableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            aria-describedby=\"badgeHelp\"\n            (change)=\"updateBadgeCounter()\"\n            [(ngModel)]=\"enableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div id=\"badgeHelp\" class=\"box-footer\">{{ \"badgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select\n            id=\"theme\"\n            name=\"Theme\"\n            aria-describedby=\"themeHelp\"\n            [(ngModel)]=\"theme\"\n            (change)=\"saveTheme()\"\n          >\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div id=\"themeHelp\" class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-right bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        Autofill\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            aria-describedby=\"autofillHelp\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div id=\"autofillHelp\" class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            aria-describedby=\"defaultAutofillHelp\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div id=\"defaultAutofillHelp\" class=\"box-footer\">\n        {{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  enableFavicon = false;\n  enableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  enableAutoTotpCopy = false; // TODO: Does it matter if this is set to false or true?\n  enableContextMenuItem = false;\n  enableAddLoginNotification = false;\n  enableChangedPasswordNotification = false;\n  showCardsCurrentTab = false;\n  showIdentitiesCurrentTab = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService,\n    private themingService: AbstractThemingService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.enableAddLoginNotification = !(await this.stateService.getDisableAddLoginNotification());\n\n    this.enableChangedPasswordNotification =\n      !(await this.stateService.getDisableChangedPasswordNotification());\n\n    this.enableContextMenuItem = !(await this.stateService.getDisableContextMenuItem());\n\n    this.showCardsCurrentTab = !(await this.stateService.getDontShowCardsCurrentTab());\n    this.showIdentitiesCurrentTab = !(await this.stateService.getDontShowIdentitiesCurrentTab());\n\n    this.enableAutoTotpCopy = !(await this.stateService.getDisableAutoTotpCopy());\n\n    this.enableFavicon = !(await this.stateService.getDisableFavicon());\n\n    this.enableBadgeCounter = !(await this.stateService.getDisableBadgeCounter());\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(!this.enableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      !this.enableChangedPasswordNotification\n    );\n  }\n\n  async updateContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(!this.enableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(!this.enableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateFavicon() {\n    await this.stateService.setDisableFavicon(!this.enableFavicon);\n  }\n\n  async updateBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(!this.enableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCardsCurrentTab() {\n    await this.stateService.setDontShowCardsCurrentTab(!this.showCardsCurrentTab);\n  }\n\n  async updateShowIdentitiesCurrentTab() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(!this.showIdentitiesCurrentTab);\n  }\n\n  async saveTheme() {\n    await this.themingService.updateConfiguredTheme(this.theme);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"goBack()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        (click)=\"refresh()\"\n        [disabled]=\"$any(refreshBtn).loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"$any(refreshBtn).loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!$any(refreshBtn).loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"@bitwarden/angular/components/premium.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private location: Location,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex no-hover no-bg\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"@bitwarden/angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <p class=\"text-center\">\n          <i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i>\n        </p>\n        <p class=\"text-center\">\n          <b>Bitwarden</b>\n        </p>\n        <p class=\"text-center\">&copy; Bitwarden Inc. 2015-{{ year }}</p>\n        <p class=\"text-center\">{{ \"version\" | i18n }}: {{ version }}</p>\n        <ng-container *ngIf=\"serverConfig$ | async as serverConfig\">\n          <p class=\"text-center\" *ngIf=\"isCloud\">\n            {{ \"serverVersion\" | i18n }}: {{ this.serverConfig?.version }}\n            <span *ngIf=\"!serverConfig.isValid()\">\n              ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n            </span>\n          </p>\n\n          <ng-container *ngIf=\"!isCloud\">\n            <ng-container *ngIf=\"serverConfig.server\">\n              <p class=\"text-center\">\n                {{ \"serverVersion\" | i18n }} <small>({{ \"thirdParty\" | i18n }})</small>:\n                {{ this.serverConfig?.version }}\n                <span *ngIf=\"!serverConfig.isValid()\">\n                  ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n                </span>\n              </p>\n              <div class=\"text-center\">\n                <small>{{ \"thirdPartyServerMessage\" | i18n: serverConfig.server?.name }}</small>\n              </div>\n            </ng-container>\n\n            <p class=\"text-center\" *ngIf=\"!serverConfig.server\">\n              {{ \"serverVersion\" | i18n }} <small>({{ \"selfHosted\" | i18n }})</small>:\n              {{ this.serverConfig?.version }}\n              <span *ngIf=\"!serverConfig.isValid()\">\n                ({{ \"lastSeenOn\" | i18n: (serverConfig.utcDate | date: \"mediumDate\") }})\n              </span>\n            </p>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"@bitwarden/common/abstractions/config/server-config\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-about\",\n  templateUrl: \"about.component.html\",\n})\nexport class AboutComponent {\n  serverConfig$: Observable<ServerConfig>;\n\n  year = new Date().getFullYear();\n  version = BrowserApi.getApplicationVersion();\n  isCloud: boolean;\n\n  constructor(configService: ConfigServiceAbstraction, environmentService: EnvironmentService) {\n    this.serverConfig$ = configService.serverConfig$;\n    this.isCloud = environmentService.isCloud();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/folders\"\n      >\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/sync\"\n      >\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/excluded-domains\"\n      >\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div\n        class=\"box-content-row box-content-row-checkbox\"\n        appBoxRow\n        *ngIf=\"supportsBiometric && biometric\"\n      >\n        <label for=\"autoBiometricsPrompt\">{{ \"enableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"enableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button type=\"button\" class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/options\"\n      >\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        aria-describedby=\"rateExtensionHelp\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div id=\"rateExtensionHelp\" class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nimport { AboutComponent } from \"./about.component\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  enableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutSettingsService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutSettingsService.isBiometricLockSet();\n    this.enableAutoBiometricsPrompt = !(await this.stateService.getDisableAutoBiometricsPrompt());\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutSettingsService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricFingerprintValidated(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(!this.enableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    this.modalService.open(AboutComponent);\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          type=\"button\"\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      aria-describedby=\"lastSyncHint\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"$any(syncBtn).loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"$any(syncBtn).loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i\n        class=\"bwi bwi-spinner bwi-lg bwi-spin\"\n        [hidden]=\"!$any(syncBtn).loading\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <p id=\"lastSyncHint\" class=\"text-center text-muted small\">\n      {{ \"lastSync\" | i18n }} {{ lastSync }}\n    </p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue: boolean | string = true;\n  @Input() falseValue: boolean | string = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        role=\"group\"\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n        attr.aria-label=\"{{ f.name }}\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n            attr.aria-describedby=\"fieldName{{ i }}\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n          attr.aria-describedby=\"fieldName{{ i }}\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div\n          class=\"drag-handle\"\n          appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n          cdkDragHandle\n        >\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div\n      class=\"box-content-row box-content-row-newmulti\"\n      *ngIf=\"!(!cipher.edit && editMode)\"\n      appBoxRow\n    >\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"cipher.name\"\n            [readonly]=\"!cipher.edit && editMode\"\n          />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n                *ngIf=\"!(!cipher.edit && editMode)\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"$any(checkPasswordBtn).loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"$any(checkPasswordBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!$any(checkPasswordBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n              <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </span>\n            <ng-template #readonlyCardBrand>\n              <input\n                id=\"cardBrand\"\n                name=\"Card.Brand\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"cipher.card.brand\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n              <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </span>\n            <ng-template #readonlyCardExpMonth>\n              <input\n                id=\"cardExpMonth\"\n                name=\"Card.ExpMonth\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"getCardExpMonthDisplay()\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n              <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </span>\n            <ng-template #readonlyIdTitle>\n              <input\n                id=\"idTitle\"\n                name=\"Identity.Title\"\n                type=\"text\"\n                [readonly]=\"true\"\n                [value]=\"cipher.identity.title\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            role=\"group\"\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"$any(u).showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!$any(u).showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"\n                  $any(u).showOptions === false || ($any(u).showOptions == null && u.match == null)\n                \"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"$any(u).showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"$any(u).showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti single-line\"\n          *ngIf=\"!(!cipher.edit && editMode)\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n            [disabled]=\"!cipher.edit && editMode\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default single-line\"\n          appStopClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [readonly]=\"!cipher.edit && editMode\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"$any(c).checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"$any(deleteBtn).loading\"></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!$any(deleteBtn).loading\"\n              ></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover single-line\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"$any(deleteBtn).loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"$any(deleteBtn).loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!$any(deleteBtn).loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" aria-describedby=\"fileHelp\" required />\n        </div>\n      </div>\n      <div id=\"fileHelp\" class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"$any(c).checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    let organizations = await this.organizationService.getAll();\n    if (organizations != null) {\n      organizations = organizations\n        .filter(isNotProviderUser)\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return organizations;\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport AutofillField from \"../../models/autofillField\";\nimport AutofillForm from \"../../models/autofillForm\";\nimport AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport interface PageDetail {\n  frameId: number;\n  tab: chrome.tabs.Tab;\n  details: AutofillPageDetails;\n}\n\nexport interface AutoFillOptions {\n  cipher: CipherView;\n  pageDetails: PageDetail[];\n  doc?: typeof window.document;\n  tab: chrome.tabs.Tab;\n  skipUsernameOnlyFill?: boolean;\n  onlyEmptyFields?: boolean;\n  onlyVisibleFields?: boolean;\n  fillNewPassword?: boolean;\n  skipLastUsed?: boolean;\n}\n\nexport interface FormData {\n  form: AutofillForm;\n  password: AutofillField;\n  username: AutofillField;\n  passwords: AutofillField[];\n}\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => FormData[];\n  doAutoFill: (options: AutoFillOptions) => Promise<string>;\n  doAutoFillOnTab: (\n    pageDetails: PageDetail[],\n    tab: chrome.tabs.Tab,\n    fromCommand: boolean\n  ) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: PageDetail[], fromCommand: boolean) => Promise<string>;\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventCollectionService: EventCollectionService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        <span class=\"truncate-box\">\n          <span class=\"truncate\">{{ cipher.name }}</span>\n          <ng-container *ngIf=\"cipher.organizationId\">\n            <i\n              class=\"bwi bwi-collection text-muted\"\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"cipher.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip text-muted\"\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n          </ng-container>\n        </span>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<ng-container *ngIf=\"loaded && organizations$ | async as organizations\">\n  <div class=\"content org-filter-content\" *ngIf=\"loaded && shouldShow(organizations)\">\n    <ng-container *ngIf=\"selectedVault$ | async as vaultFilterDisplay\">\n      <button\n        #toggleVaults\n        class=\"org-filter\"\n        (click)=\"openOverlay()\"\n        aria-haspopup=\"menu\"\n        aria-controls=\"cdk-overlay-container\"\n        [attr.aria-expanded]=\"isOpen\"\n        [attr.aria-label]=\"vaultFilterDisplay\"\n      >\n        <span class=\"org-filter-text-container\">\n          <span class=\"org-filter-text-name\">{{ vaultFilterDisplay }}</span\n          >&nbsp;\n          <span\n            ><i\n              class=\"bwi bwi-sm\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n            ></i></span\n        ></span>\n      </button>\n    </ng-container>\n    <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n      <div\n        class=\"vault-select\"\n        [@transformPanel]=\"'open'\"\n        cdkTrapFocus\n        cdkTrapFocusAutoCapture\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <button appStopClick (click)=\"selectAllVaults()\">\n          <div class=\"vault-select-org-text-container\">\n            <i class=\"bwi bwi-fw bwi-filter vault-select-prefix-icon\" aria-hidden=\"true\"></i>\n            <span class=\"vault-select-org-name\">{{ \"allVaults\" | i18n }}</span>\n          </div>\n        </button>\n        <button *ngIf=\"!enforcePersonalOwnership\" appStopClick (click)=\"selectMyVault()\">\n          <div class=\"vault-select-org-text-container\">\n            <i class=\"bwi bwi-fw bwi-user vault-select-prefix-icon\" aria-hidden=\"true\"></i>\n            <span class=\"vault-select-org-name\">{{ \"myVault\" | i18n }}</span>\n          </div>\n        </button>\n        <button\n          *ngFor=\"let organization of organizations\"\n          appStopClick\n          (click)=\"selectOrganization(organization)\"\n        >\n          <div class=\"vault-select-org-text-container\">\n            <i\n              *ngIf=\"organization.planProductType !== 1\"\n              class=\"bwi bwi-fw bwi-business vault-select-prefix-icon\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              *ngIf=\"organization.planProductType === 1\"\n              class=\"bwi bwi-fw bwi-family vault-select-prefix-icon\"\n              aria-hidden=\"true\"\n            ></i>\n\n            <span class=\"vault-select-org-name\">{{ organization.name }}</span\n            ><i\n              *ngIf=\"!organization.enabled\"\n              class=\"bwi bwi-fw bwi-exclamation-triangle text-danger vault-select-suffix-icon\"\n              attr.aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n              appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n            ></i>\n          </div>\n        </button>\n      </div>\n    </ng-template>\n  </div>\n</ng-container>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  HostListener,\n  OnDestroy,\n} from \"@angular/core\";\nimport { BehaviorSubject, concatMap, map, merge, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit, OnDestroy {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  private _selectedVault = new BehaviorSubject<string | null>(null);\n\n  isOpen = false;\n  loaded = false;\n  organizations$: Observable<Organization[]>;\n  selectedVault$: Observable<string | null> = this._selectedVault.asObservable();\n\n  enforcePersonalOwnership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n  private _destroy = new Subject<void>();\n\n  shouldShow(organizations: Organization[]): boolean {\n    return (\n      (organizations.length > 0 && !this.enforcePersonalOwnership) ||\n      (organizations.length > 1 && this.enforcePersonalOwnership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService\n  ) {}\n\n  @HostListener(\"document:keydown.escape\", [\"$event\"])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isOpen) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$\n      .pipe(takeUntil(this._destroy))\n      .pipe(\n        map((orgs) => orgs.filter(isNotProviderUser).sort((a, b) => a.name.localeCompare(b.name)))\n      );\n\n    this.organizations$\n      .pipe(\n        concatMap(async (organizations) => {\n          this.enforcePersonalOwnership =\n            await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n          if (this.shouldShow(organizations)) {\n            if (this.enforcePersonalOwnership && !this.vaultFilterService.vaultFilter.myVaultOnly) {\n              const firstOrganization = organizations[0];\n              this._selectedVault.next(firstOrganization.name);\n              this.vaultFilterService.setVaultFilter(firstOrganization.id);\n            } else if (this.vaultFilterService.vaultFilter.myVaultOnly) {\n              this._selectedVault.next(this.i18nService.t(this.vaultFilterService.myVault));\n            } else if (this.vaultFilterService.vaultFilter.selectedOrganizationId != null) {\n              const selectedOrganization = organizations.find(\n                (o) => o.id === this.vaultFilterService.vaultFilter.selectedOrganizationId\n              );\n              this._selectedVault.next(selectedOrganization.name);\n            } else {\n              this._selectedVault.next(this.i18nService.t(this.vaultFilterService.allVaults));\n            }\n          }\n        })\n      )\n      .pipe(takeUntil(this._destroy))\n      .subscribe();\n\n    this.loaded = true;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n    this._selectedVault.complete();\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    if (!organization.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    } else {\n      this._selectedVault.next(organization.name);\n      this.vaultFilterService.setVaultFilter(organization.id);\n      this.onVaultSelectionChanged.emit();\n      this.close();\n    }\n  }\n  selectAllVaults() {\n    this._selectedVault.next(this.i18nService.t(this.vaultFilterService.allVaults));\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this._selectedVault.next(this.i18nService.t(this.vaultFilterService.myVault));\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search$.next()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content no-hover\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, takeUntil } from \"rxjs/operators\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  tab: chrome.tabs.Tab;\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  isLoading = false;\n  showOrganizations = false;\n  protected search$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.isLoading) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.isLoading) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    this.search$\n      .pipe(debounceTime(500), takeUntil(this.destroy$))\n      .subscribe(() => this.searchVault());\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n\n    this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  protected async load() {\n    this.isLoading = false;\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab != null) {\n      this.url = this.tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.isLoading = this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.isLoading = this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"@bitwarden/common/models/view/password-history.view\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span\n              class=\"text monospaced no-ellipsis\"\n              [innerHTML]=\"h.password | colorPassword\"\n            ></span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"@bitwarden/angular/components/password-history.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <ng-container *ngIf=\"organizations$ | async as organizations\">\n    <header>\n      <div class=\"left\">\n        <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n      </div>\n      <h1 class=\"center\">\n        <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n      </h1>\n      <div class=\"right\">\n        <button\n          type=\"submit\"\n          [disabled]=\"form.loading || !canSave\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n          <i\n            class=\"bwi bwi-spinner bwi-lg bwi-spin\"\n            [hidden]=\"!form.loading\"\n            aria-hidden=\"true\"\n          ></i>\n        </button>\n      </div>\n    </header>\n    <main tabindex=\"-1\">\n      <div class=\"box\">\n        <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n          <div class=\"box-content-row padded no-hover\">\n            {{ \"noOrganizationsList\" | i18n }}\n          </div>\n        </div>\n        <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              aria-describedby=\"organizationHelp\"\n              [(ngModel)]=\"organizationId\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div id=\"organizationHelp\" class=\"box-footer\">\n          {{ \"moveToOrgDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n        <h2 class=\"box-header\">\n          {{ \"collections\" | i18n }}\n        </h2>\n        <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n          <div class=\"box-content-row padded no-hover\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n        </div>\n        <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n          <div\n            class=\"box-content-row box-content-row-checkbox\"\n            *ngFor=\"let c of collections; let i = index\"\n            appBoxRow\n          >\n            <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n            <input\n              id=\"collection_{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"c.checked\"\n              name=\"Collection[{{ i }}].Checked\"\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  </ng-container>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { DeepJsonify } from \"@bitwarden/common/types/deep-jsonify\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n\n  toJSON() {\n    return Utils.merge(this, {\n      collectionCounts: Utils.mapToRecord(this.collectionCounts),\n      folderCounts: Utils.mapToRecord(this.folderCounts),\n      typeCounts: Utils.mapToRecord(this.typeCounts),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<BrowserGroupingsComponentState>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new BrowserGroupingsComponentState(), json, {\n      favoriteCiphers: json.favoriteCiphers?.map((c) => CipherView.fromJSON(c)),\n      noFolderCiphers: json.noFolderCiphers?.map((c) => CipherView.fromJSON(c)),\n      ciphers: json.ciphers?.map((c) => CipherView.fromJSON(c)),\n      collectionCounts: Utils.recordToMap(json.collectionCounts),\n      folderCounts: Utils.recordToMap(json.folderCounts),\n      typeCounts: Utils.recordToMap(json.typeCounts),\n      folders: json.folders?.map((f) => FolderView.fromJSON(f)),\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select\n    (onVaultSelectionChanged)=\"vaultFilterChanged()\"\n    class=\"select-index-top\"\n  ></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"selectTrash()\">\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserGroupingsComponentState } from \"../../models/browserGroupingsComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: BrowserStateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserVaultItemsComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await firstValueFrom(\n      this.vaultFilterService.buildNestedFolders(this.selectedOrganization)\n    );\n    this.folders = allFolders.fullList;\n    this.nestedFolders = allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = Object.assign(new BrowserGroupingsComponentState(), {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    });\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/components/vault-items.component\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultItemsComponent\";\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: BrowserStateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserVaultItemsComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.vaultFilterService.getFolderNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserVaultItemsComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserVaultItemsComponentState(this.state);\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  showPremiumRequiredTotp: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n  folder: FolderView;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventCollectionService: EventCollectionService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.showPremiumRequiredTotp =\n      this.cipher.login.totp && !this.canAccessPremium && !this.cipher.organizationUseTotp;\n\n    if (this.cipher.folderId) {\n      this.folder = await (\n        await firstValueFrom(this.folderService.folderViews$)\n      ).find((f) => f.id == this.cipher.folderId);\n    }\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipherId\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventCollectionService: EventCollectionService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span\n          *ngIf=\"field.type != fieldType.Linked\"\n          class=\"row-label draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, field.value)\"\n          >{{ field.name }}</span\n        >\n        <span *ngIf=\"field.type === fieldType.Linked\" class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"@bitwarden/angular/components/view-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventCollectionService: EventCollectionService) {\n    super(eventCollectionService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label\n          for=\"name\"\n          class=\"draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, cipher.name)\"\n          >{{ \"name\" | i18n }}</label\n        >\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"$any(checkPasswordBtn).loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"$any(checkPasswordBtn).loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!$any(checkPasswordBtn).loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\" aria-hidden=\"true\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              title=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              <span class=\"sr-only\">{{ \"copyValue\" | i18n }}</span>\n              <span\n                class=\"sr-only exists-only-on-parent-focus\"\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                >{{ totpSec }}</span\n              >\n            </button>\n          </div>\n        </div>\n\n        <div class=\"box-content-row box-content-row-flex totp\" *ngIf=\"showPremiumRequiredTotp\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"verificationCodeTotp\" | i18n }}</span>\n            <span class=\"row-label\">\n              <a routerLink=\"/premium\">\n                {{ \"premiumSubcriptionRequired\" | i18n }}\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.cardholderName)\"\n            >{{ \"cardholderName\" | i18n }}</span\n          >\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.number)\"\n              >{{ \"number\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.brand)\"\n            >{{ \"brand\" | i18n }}</span\n          >\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.card.expiration)\"\n            >{{ \"expiration\" | i18n }}</span\n          >\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.card.code)\"\n              >{{ \"securityCode\" | i18n }}</span\n            >\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.fullName)\"\n            >{{ \"identityName\" | i18n }}</span\n          >\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.username)\"\n            >{{ \"username\" | i18n }}</span\n          >\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.company)\"\n            >{{ \"company\" | i18n }}</span\n          >\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.ssn)\"\n            >{{ \"ssn\" | i18n }}</span\n          >\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.passportNumber)\"\n            >{{ \"passportNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.licenseNumber)\"\n            >{{ \"licenseNumber\" | i18n }}</span\n          >\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.email)\"\n            >{{ \"email\" | i18n }}</span\n          >\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, cipher.identity.phone)\"\n            >{{ \"phone\" | i18n }}</span\n          >\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"\n              setTextDataOnDrag(\n                $event,\n                (cipher.identity.address1 ? cipher.identity.address1 + '\\n' : '') +\n                  (cipher.identity.address2 ? cipher.identity.address2 + '\\n' : '') +\n                  (cipher.identity.address3 ? cipher.identity.address3 + '\\n' : '') +\n                  (cipher.identity.fullAddressPart2\n                    ? cipher.identity.fullAddressPart2 + '\\n'\n                    : '') +\n                  (cipher.identity.country ? cipher.identity.country : '')\n              )\n            \"\n            >{{ \"address\" | i18n }}</span\n          >\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"!u.isWebsite\"\n            >{{ \"uri\" | i18n }}</label\n          >\n          <label\n            for=\"hostOrUri{{ i }}\"\n            class=\"row-label draggable\"\n            draggable=\"true\"\n            (dragstart)=\"setTextDataOnDrag($event, u.uri)\"\n            *ngIf=\"u.isWebsite\"\n            >{{ \"website\" | i18n }}</label\n          >\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.folderId\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label\n          for=\"folderName\"\n          class=\"draggable\"\n          draggable=\"true\"\n          (dragstart)=\"setTextDataOnDrag($event, folder.name)\"\n          >{{ \"folder\" | i18n }}</label\n        >\n        <input id=\"folderName\" type=\"text\" name=\"folderName\" [value]=\"folder.name\" readonly />\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label\n        for=\"notes\"\n        class=\"draggable\"\n        draggable=\"true\"\n        (dragstart)=\"setTextDataOnDrag($event, cipher.notes)\"\n        >{{ \"notes\" | i18n }}</label\n      >\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!$any(attachment).downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"$any(attachment).downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"delete()\"\n        *ngIf=\"cipher.edit\"\n      >\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.creationDate\">\n        <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n        {{ cipher.creationDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <button\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"@bitwarden/angular/components/view.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventCollectionService: EventCollectionService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventCollectionService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.updateWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault/vault-items.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: VaultItemsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SecurityContext,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: BrowserStateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount$.pipe(takeUntil(this.destroy$)).subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.activeUserId === null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const forceWindowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        // Wait to make sure background has reloaded first.\n        window.setTimeout(\n          () => BrowserApi.reloadExtension(forceWindowReload ? window : null),\n          2000\n        );\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserVaultItemsComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n  avatarColor?: string;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export class UpdateAvatarRequest {\n  avatarColor: string;\n\n  constructor(avatarColor: string) {\n    this.avatarColor = avatarColor;\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"../../abstractions/account/avatar-update.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { UpdateAvatarRequest } from \"../../models/request/update-avatar.request\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\n\nexport class AvatarUpdateService implements AvatarUpdateServiceAbstraction {\n  private _avatarUpdate$ = new BehaviorSubject<string | null>(null);\n  avatarUpdate$: Observable<string | null> = this._avatarUpdate$.asObservable();\n\n  constructor(private apiService: ApiService, private stateService: StateService) {\n    this.loadColorFromState();\n  }\n\n  loadColorFromState(): Promise<string | null> {\n    return this.stateService.getAvatarColor().then((color) => {\n      this._avatarUpdate$.next(color);\n      return color;\n    });\n  }\n\n  pushUpdate(color: string | null): Promise<ProfileResponse | void> {\n    return this.apiService.putAvatar(new UpdateAvatarRequest(color)).then((response) => {\n      this.stateService.setAvatarColor(response.avatarColor);\n      this._avatarUpdate$.next(response.avatarColor);\n    });\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  avatarColor: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async putAvatar(request: UpdateAvatarRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/avatar\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { UserApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { UserApiLogInStrategy } from \"../misc/logInStrategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionGroupDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { CipherService } from \"../../abstractions/cipher.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  async getAvatarColor(options?: StorageOptions): Promise<string | null | undefined> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.avatarColor;\n  }\n\n  async setAvatarColor(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.avatarColor = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setAvatarColor(response.avatarColor);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../email-forwarders/anon-addy-forwarder\";\nimport { DuckDuckGoForwarder } from \"../email-forwarders/duck-duck-go-forwarder\";\nimport { FastmailForwarder } from \"../email-forwarders/fastmail-forwarder\";\nimport { FirefoxRelayForwarder } from \"../email-forwarders/firefox-relay-forwarder\";\nimport { Forwarder } from \"../email-forwarders/forwarder\";\nimport { ForwarderOptions } from \"../email-forwarders/forwarder-options\";\nimport { SimpleLoginForwarder } from \"../email-forwarders/simple-login-forwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AvatarUpdateService as AccountUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    {\n      provide: AccountUpdateServiceAbstraction,\n      useClass: AvatarUpdateService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nexport abstract class AvatarUpdateService {\n  avatarUpdate$ = new Observable<string | null>();\n  abstract pushUpdate(color: string): Promise<ProfileResponse | void>;\n  abstract loadColorFromState(): Promise<string | null>;\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(authService: AuthService): Promise<void> {\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    if (accounts != null) {\n      const keys = Object.keys(accounts);\n      if (keys.length > 0) {\n        for (const userId of keys) {\n          if ((await authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n            return;\n          }\n        }\n      }\n    }\n\n    // A reloadInterval has already been set and is executing\n    if (this.reloadInterval != null) {\n      return;\n    }\n\n    // User has set a PIN, with ask for master password on restart, to protect their vault\n    const decryptedPinProtected = await this.stateService.getDecryptedPinProtected();\n    if (decryptedPinProtected != null) {\n      return;\n    }\n\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => await this.executeProcessReload(), 10000);\n  }\n\n  private async inactiveMoreThanSeconds(seconds: number): Promise<boolean> {\n    const lastActive = await this.stateService.getLastActive();\n    if (lastActive != null) {\n      const diffMs = new Date().getTime() - lastActive;\n      return diffMs >= seconds * 1000;\n    }\n    return true;\n  }\n\n  private async executeProcessReload() {\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    const doRefresh =\n      accounts == null ||\n      Object.keys(accounts).length == 0 ||\n      (await this.inactiveMoreThanSeconds(5));\n\n    const biometricLockedFingerprintValidated =\n      await this.stateService.getBiometricFingerprintValidated();\n    if (doRefresh && !biometricLockedFingerprintValidated) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n      this.messagingService.send(\"reloadProcess\");\n      if (this.reloadCallback != null) {\n        await this.reloadCallback();\n      }\n    }\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export type CachedServices = Record<string, any>;\n\nexport type FactoryOptions = {\n  alwaysInitializeNewService?: boolean;\n  doNotStoreInitializedService?: boolean;\n  [optionsKey: string]: unknown;\n};\n\nexport async function factory<\n  TCache extends CachedServices,\n  TName extends keyof TCache,\n  TOpts extends FactoryOptions\n>(\n  cachedServices: TCache,\n  name: TName,\n  opts: TOpts,\n  factory: () => TCache[TName] | Promise<TCache[TName]>\n): Promise<TCache[TName]> {\n  let instance = cachedServices[name];\n  if (opts.alwaysInitializeNewService || !instance) {\n    const instanceOrPromise = factory();\n    instance = instanceOrPromise instanceof Promise ? await instanceOrPromise : instanceOrPromise;\n  }\n\n  if (!opts.doNotStoreInitializedService) {\n    cachedServices[name] = instance;\n  }\n\n  return instance as TCache[TName];\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport default abstract class AbstractChromeStorageService implements AbstractStorageService {\n  protected abstract chromeStorageApi: chrome.storage.StorageArea;\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserLocalStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.local;\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserMemoryStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.session;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  AbstractCachedStorageService,\n  MemoryStorageServiceInterface,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MemoryStorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { devFlag } from \"../decorators/dev-flag.decorator\";\nimport { devFlagEnabled } from \"../flags\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\nimport BrowserLocalStorageService from \"./browserLocalStorage.service\";\nimport BrowserMemoryStorageService from \"./browserMemoryStorage.service\";\n\nconst keys = {\n  encKey: \"localEncryptionKey\",\n  sessionKey: \"session\",\n};\n\nexport class LocalBackedSessionStorageService\n  extends AbstractCachedStorageService\n  implements MemoryStorageServiceInterface\n{\n  private cache = new Map<string, unknown>();\n  private localStorage = new BrowserLocalStorageService();\n  private sessionStorage = new BrowserMemoryStorageService();\n\n  constructor(\n    private encryptService: EncryptService,\n    private keyGenerationService: AbstractKeyGenerationService\n  ) {\n    super();\n  }\n\n  async get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    if (this.cache.has(key)) {\n      return this.cache.get(key) as T;\n    }\n\n    return await this.getBypassCache(key, options);\n  }\n\n  async getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T> {\n    const session = await this.getLocalSession(await this.getSessionEncKey());\n    if (session == null || !Object.keys(session).includes(key)) {\n      return null;\n    }\n\n    let value = session[key];\n    if (options?.deserializer != null) {\n      value = options.deserializer(value as Jsonify<T>);\n    }\n\n    this.cache.set(key, value);\n    return this.cache.get(key) as T;\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save<T>(key: string, obj: T): Promise<void> {\n    if (obj == null) {\n      this.cache.delete(key);\n    } else {\n      this.cache.set(key, obj);\n    }\n\n    const sessionEncKey = await this.getSessionEncKey();\n    const localSession = (await this.getLocalSession(sessionEncKey)) ?? {};\n    localSession[key] = obj;\n    await this.setLocalSession(localSession, sessionEncKey);\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.save(key, null);\n  }\n\n  async getLocalSession(encKey: SymmetricCryptoKey): Promise<Record<string, unknown>> {\n    const local = await this.localStorage.get<string>(keys.sessionKey);\n\n    if (local == null) {\n      return null;\n    }\n\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      return local as any as Record<string, unknown>;\n    }\n\n    const sessionJson = await this.encryptService.decryptToUtf8(new EncString(local), encKey);\n    if (sessionJson == null) {\n      // Error with decryption -- session is lost, delete state and key and start over\n      await this.setSessionEncKey(null);\n      await this.localStorage.remove(keys.sessionKey);\n      return null;\n    }\n    return JSON.parse(sessionJson);\n  }\n\n  async setLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      await this.setDecryptedLocalSession(session);\n    } else {\n      await this.setEncryptedLocalSession(session, key);\n    }\n  }\n\n  @devFlag(\"storeSessionDecrypted\")\n  async setDecryptedLocalSession(session: Record<string, unknown>): Promise<void> {\n    // Make sure we're storing the jsonified version of the session\n    const jsonSession = JSON.parse(JSON.stringify(session));\n    if (session == null) {\n      await this.localStorage.remove(keys.sessionKey);\n    } else {\n      await this.localStorage.save(keys.sessionKey, jsonSession);\n    }\n  }\n\n  async setEncryptedLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    const jsonSession = JSON.stringify(session);\n    const encSession = await this.encryptService.encrypt(jsonSession, key);\n\n    if (encSession == null) {\n      return await this.localStorage.remove(keys.sessionKey);\n    }\n    await this.localStorage.save(keys.sessionKey, encSession.encryptedString);\n  }\n\n  async getSessionEncKey(): Promise<SymmetricCryptoKey> {\n    let storedKey = await this.sessionStorage.get<SymmetricCryptoKey>(keys.encKey);\n    if (storedKey == null || Object.keys(storedKey).length == 0) {\n      storedKey = await this.keyGenerationService.makeEphemeralKey();\n      await this.setSessionEncKey(storedKey);\n    }\n    return SymmetricCryptoKey.fromJSON(storedKey);\n  }\n\n  async setSessionEncKey(input: SymmetricCryptoKey): Promise<void> {\n    if (input == null) {\n      await this.sessionStorage.remove(keys.encKey);\n    } else {\n      await this.sessionStorage.save(keys.encKey, input);\n    }\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype CryptoFunctionServiceFactoryOptions = FactoryOptions & {\n  cryptoFunctionServiceOptions: {\n    win: Window | typeof globalThis;\n  };\n};\n\nexport type CryptoFunctionServiceInitOptions = CryptoFunctionServiceFactoryOptions;\n\nexport function cryptoFunctionServiceFactory(\n  cache: { cryptoFunctionService?: CryptoFunctionService } & CachedServices,\n  opts: CryptoFunctionServiceFactoryOptions\n): Promise<CryptoFunctionService> {\n  return factory(\n    cache,\n    \"cryptoFunctionService\",\n    opts,\n    () => new WebCryptoFunctionService(opts.cryptoFunctionServiceOptions.win)\n  );\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LogLevelType } from \"@bitwarden/common/enums/logLevelType\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype LogServiceFactoryOptions = FactoryOptions & {\n  logServiceOptions: {\n    isDev: boolean;\n    filter?: (level: LogLevelType) => boolean;\n  };\n};\n\nexport type LogServiceInitOptions = LogServiceFactoryOptions;\n\nexport function logServiceFactory(\n  cache: { logService?: LogService } & CachedServices,\n  opts: LogServiceInitOptions\n): Promise<LogService> {\n  return factory(\n    cache,\n    \"logService\",\n    opts,\n    () => new ConsoleLogService(opts.logServiceOptions.isDev, opts.logServiceOptions.filter)\n  );\n}\n","import { devFlagEnabled, DevFlags } from \"../flags\";\n\nexport function devFlag(flag: keyof DevFlags) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args: any[]) {\n      if (!devFlagEnabled(flag)) {\n        throw new Error(\n          `This method should not be called, it is protected by a disabled dev flag.`\n        );\n      }\n      return originalMethod.apply(this, args);\n    };\n  };\n}\n","import { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\n\nimport { flagEnabled } from \"../../flags\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { LogServiceInitOptions, logServiceFactory } from \"./log-service.factory\";\n\ntype EncryptServiceFactoryOptions = FactoryOptions & {\n  encryptServiceOptions: {\n    logMacFailures: boolean;\n  };\n};\n\nexport type EncryptServiceInitOptions = EncryptServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function encryptServiceFactory(\n  cache: { encryptService?: EncryptServiceImplementation } & CachedServices,\n  opts: EncryptServiceInitOptions\n): Promise<EncryptServiceImplementation> {\n  return factory(cache, \"encryptService\", opts, async () =>\n    flagEnabled(\"multithreadDecryption\")\n      ? new MultithreadEncryptServiceImplementation(\n          await cryptoFunctionServiceFactory(cache, opts),\n          await logServiceFactory(cache, opts),\n          opts.encryptServiceOptions.logMacFailures\n        )\n      : new EncryptServiceImplementation(\n          await cryptoFunctionServiceFactory(cache, opts),\n          await logServiceFactory(cache, opts),\n          opts.encryptServiceOptions.logMacFailures\n        )\n  );\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\n\nexport class KeyGenerationService implements AbstractKeyGenerationService {\n  constructor(private cryptoFunctionService: CryptoFunctionService) {}\n\n  async makeEphemeralKey(numBytes = 16): Promise<SymmetricCryptoKey> {\n    const keyMaterial = await this.cryptoFunctionService.randomBytes(numBytes);\n    const key = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-ephemeral\",\n      \"ephemeral\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(key);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport BrowserLocalStorageService from \"../../services/browserLocalStorage.service\";\nimport { LocalBackedSessionStorageService } from \"../../services/localBackedSessionStorage.service\";\n\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  keyGenerationServiceFactory,\n  KeyGenerationServiceInitOptions,\n} from \"./key-generation-service.factory\";\n\ntype StorageServiceFactoryOptions = FactoryOptions;\n\nexport type DiskStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type SecureStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type MemoryStorageServiceInitOptions = StorageServiceFactoryOptions &\n  EncryptServiceInitOptions &\n  KeyGenerationServiceInitOptions;\n\nexport function diskStorageServiceFactory(\n  cache: { diskStorageService?: AbstractStorageService } & CachedServices,\n  opts: DiskStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"diskStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function secureStorageServiceFactory(\n  cache: { secureStorageService?: AbstractStorageService } & CachedServices,\n  opts: SecureStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"secureStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function memoryStorageServiceFactory(\n  cache: { memoryStorageService?: AbstractStorageService } & CachedServices,\n  opts: MemoryStorageServiceInitOptions\n): Promise<AbstractStorageService> {\n  return factory(cache, \"memoryStorageService\", opts, async () => {\n    if (BrowserApi.manifestVersion === 3) {\n      return new LocalBackedSessionStorageService(\n        await encryptServiceFactory(cache, opts),\n        await keyGenerationServiceFactory(cache, opts)\n      );\n    }\n    return new MemoryStorageService();\n  });\n}\n","import { KeyGenerationService } from \"../../services/keyGeneration.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype KeyGenerationServiceFactoryOptions = FactoryOptions;\n\nexport type KeyGenerationServiceInitOptions = KeyGenerationServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions;\n\nexport function keyGenerationServiceFactory(\n  cache: { keyGenerationService?: KeyGenerationService } & CachedServices,\n  opts: KeyGenerationServiceInitOptions\n): Promise<KeyGenerationService> {\n  return factory(\n    cache,\n    \"keyGenerationService\",\n    opts,\n    async () => new KeyGenerationService(await cryptoFunctionServiceFactory(cache, opts))\n  );\n}\n","import { DiskStorageOptions } from \"@koa/multer\";\n\nimport { AppIdService as AbstractAppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { diskStorageServiceFactory } from \"./storage-service.factory\";\n\ntype AppIdServiceFactoryOptions = FactoryOptions;\n\nexport type AppIdServiceInitOptions = AppIdServiceFactoryOptions & DiskStorageOptions;\n\nexport function appIdServiceFactory(\n  cache: { appIdService?: AbstractAppIdService } & CachedServices,\n  opts: AppIdServiceInitOptions\n): Promise<AbstractAppIdService> {\n  return factory(\n    cache,\n    \"appIdService\",\n    opts,\n    async () => new AppIdService(await diskStorageServiceFactory(cache, opts))\n  );\n}\n","import { BehaviorSubject, concatMap, ReplaySubject, Subject, Subscription } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BrowserStateService } from \"../../services/abstractions/browser-state.service\";\n\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\nexport class SessionSyncer {\n  subscription: Subscription;\n  id = Utils.newGuid();\n\n  // ignore initial values\n  private ignoreNUpdates = 0;\n\n  constructor(\n    private subject: Subject<any>,\n    private stateService: BrowserStateService,\n    private metaData: SyncedItemMetadata\n  ) {\n    if (!(subject instanceof Subject)) {\n      throw new Error(\"subject must inherit from Subject\");\n    }\n\n    if (metaData.ctor == null && metaData.initializer == null) {\n      throw new Error(\"ctor or initializer must be provided\");\n    }\n  }\n\n  init() {\n    switch (this.subject.constructor) {\n      case ReplaySubject:\n        // ignore all updates currently in the buffer\n        this.ignoreNUpdates = (this.subject as any)._buffer.length;\n        break;\n      case BehaviorSubject:\n        this.ignoreNUpdates = 1;\n        break;\n      default:\n        break;\n    }\n\n    this.observe();\n    // must be synchronous\n    this.stateService.hasInSessionMemory(this.metaData.sessionKey).then((hasInSessionMemory) => {\n      if (hasInSessionMemory) {\n        this.update();\n      }\n    });\n\n    this.listenForUpdates();\n  }\n\n  private observe() {\n    // This may be a memory leak.\n    // There is no good time to unsubscribe from this observable. Hopefully Manifest V3 clears memory from temporary\n    // contexts. If so, this is handled by destruction of the context.\n    this.subscription = this.subject\n      .pipe(\n        concatMap(async (next) => {\n          if (this.ignoreNUpdates > 0) {\n            this.ignoreNUpdates -= 1;\n            return;\n          }\n          await this.updateSession(next);\n        })\n      )\n      .subscribe();\n  }\n\n  private listenForUpdates() {\n    // This is an unawaited promise, but it will be executed asynchronously in the background.\n    BrowserApi.messageListener(\n      this.updateMessageCommand,\n      async (message) => await this.updateFromMessage(message)\n    );\n  }\n\n  async updateFromMessage(message: any) {\n    if (message.command != this.updateMessageCommand || message.id === this.id) {\n      return;\n    }\n    this.update();\n  }\n\n  async update() {\n    const builder = SyncedItemMetadata.builder(this.metaData);\n    const value = await this.stateService.getFromSessionMemory(this.metaData.sessionKey, builder);\n    this.ignoreNUpdates = 1;\n    this.subject.next(value);\n  }\n\n  private async updateSession(value: any) {\n    await this.stateService.setInSessionMemory(this.metaData.sessionKey, value);\n    await BrowserApi.sendMessage(this.updateMessageCommand, { id: this.id });\n  }\n\n  private get updateMessageCommand() {\n    return `${this.metaData.sessionKey}_update`;\n  }\n}\n","export type InitializeOptions = \"array\" | \"record\" | \"object\";\n\nexport class SyncedItemMetadata {\n  propertyKey: string;\n  sessionKey: string;\n  ctor?: new () => any;\n  initializer?: (keyValuePair: any) => any;\n  initializeAs: InitializeOptions;\n\n  static builder(metadata: SyncedItemMetadata): (o: any) => any {\n    const itemBuilder =\n      metadata.initializer != null\n        ? metadata.initializer\n        : (o: any) => Object.assign(new metadata.ctor(), o);\n    if (metadata.initializeAs === \"array\") {\n      return (keyValuePair: any) => keyValuePair.map((o: any) => itemBuilder(o));\n    } else if (metadata.initializeAs === \"record\") {\n      return (keyValuePair: any) => {\n        const record: Record<any, any> = {};\n        for (const key in keyValuePair) {\n          record[key] = itemBuilder(keyValuePair[key]);\n        }\n        return record;\n      };\n    } else {\n      return (keyValuePair: any) => itemBuilder(keyValuePair);\n    }\n  }\n}\n","import { Constructor } from \"type-fest\";\n\nimport { BrowserStateService } from \"../../services/browser-state.service\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { SessionSyncer } from \"./session-syncer\";\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\n/**\n * Mark the class as syncing state across the browser session. This decorator finds rxjs BehaviorSubject properties\n * marked with @sessionSync and syncs these values across the browser session.\n *\n * @param constructor\n * @returns A new constructor that extends the original one to add session syncing.\n */\nexport function browserSession<TCtor extends Constructor<any>>(constructor: TCtor) {\n  return class extends constructor implements SessionStorable {\n    __syncedItemMetadata: SyncedItemMetadata[];\n    __sessionSyncers: SessionSyncer[];\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Require state service to be injected\n      const stateService: BrowserStateService = [this as any]\n        .concat(args)\n        .find(\n          (arg) =>\n            typeof arg.setInSessionMemory === \"function\" &&\n            typeof arg.getFromSessionMemory === \"function\"\n        );\n      if (!stateService) {\n        throw new Error(\n          `Cannot decorate ${constructor.name} with browserSession, Browser's StateService must be injected`\n        );\n      }\n\n      if (this.__syncedItemMetadata == null || !(this.__syncedItemMetadata instanceof Array)) {\n        return;\n      }\n\n      this.__sessionSyncers = this.__syncedItemMetadata.map((metadata) =>\n        this.buildSyncer(metadata, stateService)\n      );\n    }\n\n    buildSyncer(metadata: SyncedItemMetadata, stateService: BrowserStateService) {\n      const syncer = new SessionSyncer((this as any)[metadata.propertyKey], stateService, metadata);\n      syncer.init();\n      return syncer;\n    }\n  };\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { InitializeOptions } from \"./sync-item-metadata\";\n\nclass BuildOptions<T, TJson = Jsonify<T>> {\n  ctor?: new () => T;\n  initializer?: (keyValuePair: TJson) => T;\n  initializeAs?: InitializeOptions;\n}\n\n// Used to ensure uniqueness for each synced observable\nlet index = 0;\n\n/**\n * A decorator used to indicate the BehaviorSubject should be synced for this browser session across all contexts.\n *\n * >**Note** This decorator does nothing if the enclosing class is not decorated with @browserSession.\n *\n * >**Note** The Behavior subject must be initialized with a default or in the constructor of the class. If it is not, an error will be thrown.\n *\n * >**!!Warning!!** If the property is overwritten at any time, the new value will not be synced across the browser session.\n *\n * @param buildOptions\n * Builders for the value, requires either a constructor (ctor) for your BehaviorSubject type or an\n * initializer function that takes a key value pair representation of the BehaviorSubject data\n * and returns your instantiated BehaviorSubject value. `initializeAs can optionally be used to indicate\n * the provided initializer function should be used to build an array of values. For example,\n * ```ts\n * \\@sessionSync({ initializer: Foo.fromJSON, initializeAs: 'array' })\n * ```\n * is equivalent to\n * ```\n * \\@sessionSync({ initializer: (obj: any[]) => obj.map((f) => Foo.fromJSON })\n * ```\n *\n * @returns decorator function\n */\nexport function sessionSync<T>(buildOptions: BuildOptions<T>) {\n  return (prototype: unknown, propertyKey: string) => {\n    // Force prototype into SessionStorable and implement it.\n    const p = prototype as SessionStorable;\n\n    if (p.__syncedItemMetadata == null) {\n      p.__syncedItemMetadata = [];\n    }\n\n    p.__syncedItemMetadata.push({\n      propertyKey,\n      sessionKey: `${propertyKey}_${index++}`,\n      ctor: buildOptions.ctor,\n      initializer: buildOptions.initializer,\n      initializeAs: buildOptions.initializeAs ?? \"object\",\n    });\n  };\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n\n  static fromJSON(json: Jsonify<AccountSettings>): AccountSettings {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), json, super.fromJSON(json));\n  }\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, super.fromJSON(json), {\n      settings: AccountSettings.fromJSON(json.settings),\n      groupings: BrowserGroupingsComponentState.fromJSON(json.groupings),\n      send: BrowserSendComponentState.fromJSON(json.send),\n      ciphers: BrowserComponentState.fromJSON(json.ciphers),\n      sendType: BrowserComponentState.fromJSON(json.sendType),\n    });\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { AbstractCachedStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { BrowserStateService as StateServiceAbstraction } from \"./abstractions/browser-state.service\";\n\n@browserSession\nexport class BrowserStateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  @sessionSync({\n    initializer: Account.fromJSON as any, // TODO: Remove this any when all any types are removed from Account\n    initializeAs: \"record\",\n  })\n  protected accountsSubject: BehaviorSubject<{ [userId: string]: Account }>;\n  @sessionSync({ ctor: String })\n  protected activeAccountSubject: BehaviorSubject<string>;\n  @sessionSync({ ctor: Boolean })\n  protected activeAccountUnlockedSubject: BehaviorSubject<boolean>;\n  @sessionSync({\n    initializer: Account.fromJSON as any, // TODO: Remove this any when all any types are removed from Account\n    initializeAs: \"record\",\n  })\n  protected accountDiskCache: BehaviorSubject<Record<string, Account>>;\n\n  protected accountDeserializer = Account.fromJSON;\n\n  async hasInSessionMemory(key: string): Promise<boolean> {\n    return await this.memoryStorageService.has(key);\n  }\n\n  async getFromSessionMemory<T>(key: string, deserializer?: (obj: Jsonify<T>) => T): Promise<T> {\n    return this.memoryStorageService instanceof AbstractCachedStorageService\n      ? await this.memoryStorageService.getBypassCache<T>(key, { deserializer: deserializer })\n      : await this.memoryStorageService.get<T>(key);\n  }\n\n  async setInSessionMemory(key: string, value: any): Promise<void> {\n    await this.memoryStorageService.save(key, value);\n  }\n\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(await this.defaultInMemoryOptions())) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.groupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserVaultItemsComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.ciphers;\n  }\n\n  async setBrowserVaultItemsComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.ciphers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.send = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.sendType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nimport { Account } from \"../../models/account\";\nimport { BrowserStateService } from \"../../services/browser-state.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateMigrationServiceFactory,\n  StateMigrationServiceInitOptions,\n} from \"./state-migration-service.factory\";\nimport {\n  diskStorageServiceFactory,\n  secureStorageServiceFactory,\n  memoryStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  SecureStorageServiceInitOptions,\n  MemoryStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateServiceFactoryOptions = FactoryOptions & {\n  stateServiceOptions: {\n    useAccountCache?: boolean;\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateServiceInitOptions = StateServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions &\n  MemoryStorageServiceInitOptions &\n  LogServiceInitOptions &\n  StateMigrationServiceInitOptions;\n\nexport async function stateServiceFactory(\n  cache: { stateService?: BrowserStateService } & CachedServices,\n  opts: StateServiceInitOptions\n): Promise<BrowserStateService> {\n  const service = await factory(\n    cache,\n    \"stateService\",\n    opts,\n    async () =>\n      await new BrowserStateService(\n        await diskStorageServiceFactory(cache, opts),\n        await secureStorageServiceFactory(cache, opts),\n        await memoryStorageServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await stateMigrationServiceFactory(cache, opts),\n        opts.stateServiceOptions.stateFactory,\n        opts.stateServiceOptions.useAccountCache\n      )\n  );\n  service.init();\n  return service;\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"../../models/account\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  diskStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  secureStorageServiceFactory,\n  SecureStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateMigrationServiceFactoryOptions = FactoryOptions & {\n  stateMigrationServiceOptions: {\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateMigrationServiceInitOptions = StateMigrationServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions;\n\nexport function stateMigrationServiceFactory(\n  cache: { stateMigrationService?: StateMigrationService } & CachedServices,\n  opts: StateMigrationServiceInitOptions\n): Promise<StateMigrationService> {\n  return factory(\n    cache,\n    \"stateMigrationService\",\n    opts,\n    async () =>\n      new StateMigrationService(\n        await diskStorageServiceFactory(cache, opts),\n        await secureStorageServiceFactory(cache, opts),\n        opts.stateMigrationServiceOptions.stateFactory\n      )\n  );\n}\n","import { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateServiceFactory as stateServiceFactory,\n  StateServiceInitOptions,\n} from \"./state-service.factory\";\n\ntype EnvironmentServiceFactoryOptions = FactoryOptions;\n\nexport type EnvironmentServiceInitOptions = EnvironmentServiceFactoryOptions &\n  StateServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function environmentServiceFactory(\n  cache: { environmentService?: BrowserEnvironmentService } & CachedServices,\n  opts: EnvironmentServiceInitOptions\n): Promise<BrowserEnvironmentService> {\n  return factory(\n    cache,\n    \"environmentService\",\n    opts,\n    async () =>\n      new BrowserEnvironmentService(\n        await stateServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts)\n      )\n  );\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    return BrowserApi.sendMessage(subscriber, arg);\n  }\n}\n","import { MessagingService as AbstractMessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype MessagingServiceFactoryOptions = FactoryOptions;\n\nexport type MessagingServiceInitOptions = MessagingServiceFactoryOptions;\n\nexport function messagingServiceFactory(\n  cache: { messagingService?: AbstractMessagingService } & CachedServices,\n  opts: MessagingServiceInitOptions\n): Promise<AbstractMessagingService> {\n  return factory(cache, \"messagingService\", opts, () => new BrowserMessagingService());\n}\n","import { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport BrowserPlatformUtilsService from \"../../services/browserPlatformUtils.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { MessagingServiceInitOptions, messagingServiceFactory } from \"./messaging-service.factory\";\n\ntype PlatformUtilsServiceFactoryOptions = FactoryOptions & {\n  platformUtilsServiceOptions: {\n    clipboardWriteCallback: (clipboardValue: string, clearMs: number) => Promise<void>;\n    biometricCallback: () => Promise<boolean>;\n    win: Window & typeof globalThis;\n  };\n};\n\nexport type PlatformUtilsServiceInitOptions = PlatformUtilsServiceFactoryOptions &\n  MessagingServiceInitOptions;\n\nexport function platformUtilsServiceFactory(\n  cache: { platformUtilsService?: PlatformUtilsService } & CachedServices,\n  opts: PlatformUtilsServiceInitOptions\n): Promise<PlatformUtilsService> {\n  return factory(\n    cache,\n    \"platformUtilsService\",\n    opts,\n    async () =>\n      new BrowserPlatformUtilsService(\n        await messagingServiceFactory(cache, opts),\n        opts.platformUtilsServiceOptions.clipboardWriteCallback,\n        opts.platformUtilsServiceOptions.biometricCallback,\n        opts.platformUtilsServiceOptions.win\n      )\n  );\n}\n","import { TokenService as AbstractTokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype TokenServiceFactoryOptions = FactoryOptions;\n\nexport type TokenServiceInitOptions = TokenServiceFactoryOptions & StateServiceInitOptions;\n\nexport function tokenServiceFactory(\n  cache: { tokenService?: AbstractTokenService } & CachedServices,\n  opts: TokenServiceInitOptions\n): Promise<AbstractTokenService> {\n  return factory(\n    cache,\n    \"tokenService\",\n    opts,\n    async () => new TokenService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { ApiService as AbstractApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\n\nimport { AppIdServiceInitOptions, appIdServiceFactory } from \"./app-id-service.factory\";\nimport {\n  environmentServiceFactory,\n  EnvironmentServiceInitOptions,\n} from \"./environment-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  PlatformUtilsServiceInitOptions,\n  platformUtilsServiceFactory,\n} from \"./platform-utils-service.factory\";\nimport { TokenServiceInitOptions, tokenServiceFactory } from \"./token-service.factory\";\n\ntype ApiServiceFactoryOptions = FactoryOptions & {\n  apiServiceOptions: {\n    logoutCallback: (expired: boolean) => Promise<void>;\n    customUserAgent?: string;\n  };\n};\n\nexport type ApiServiceInitOptions = ApiServiceFactoryOptions &\n  TokenServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  EnvironmentServiceInitOptions &\n  AppIdServiceInitOptions;\n\nexport function apiServiceFactory(\n  cache: { apiService?: AbstractApiService } & CachedServices,\n  opts: ApiServiceInitOptions\n): Promise<AbstractApiService> {\n  return factory(\n    cache,\n    \"apiService\",\n    opts,\n    async () =>\n      new ApiService(\n        await tokenServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await environmentServiceFactory(cache, opts),\n        await appIdServiceFactory(cache, opts),\n        opts.apiServiceOptions.logoutCallback,\n        opts.apiServiceOptions.customUserAgent\n      )\n  );\n}\n","import { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { CryptoService as AbstractCryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { BrowserCryptoService } from \"../../services/browserCrypto.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  platformUtilsServiceFactory,\n  PlatformUtilsServiceInitOptions,\n} from \"./platform-utils-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype CryptoServiceFactoryOptions = FactoryOptions;\n\nexport type CryptoServiceInitOptions = CryptoServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions &\n  EncryptServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  LogServiceInitOptions &\n  StateServiceInitOptions;\n\nexport function cryptoServiceFactory(\n  cache: { cryptoService?: AbstractCryptoService } & CachedServices,\n  opts: CryptoServiceInitOptions\n): Promise<AbstractCryptoService> {\n  return factory(\n    cache,\n    \"cryptoService\",\n    opts,\n    async () =>\n      new BrowserCryptoService(\n        await cryptoFunctionServiceFactory(cache, opts),\n        await encryptServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts)\n      )\n  );\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { I18nService as AbstractI18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nimport I18nService from \"../../services/i18n.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\n\ntype I18nServiceFactoryOptions = FactoryOptions & {\n  i18nServiceOptions: {\n    systemLanguage: string;\n  };\n};\n\nexport type I18nServiceInitOptions = I18nServiceFactoryOptions;\n\nexport async function i18nServiceFactory(\n  cache: { i18nService?: AbstractI18nService } & CachedServices,\n  opts: I18nServiceInitOptions\n): Promise<AbstractI18nService> {\n  const service = await factory(\n    cache,\n    \"i18nService\",\n    opts,\n    () => new I18nService(opts.i18nServiceOptions.systemLanguage)\n  );\n  if (!(service as BaseI18nService as any).inited) {\n    await (service as BaseI18nService).init();\n  }\n  return service;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserOrganizationService extends OrganizationService {\n  @sessionSync({ initializer: Organization.fromJSON, initializeAs: \"array\" })\n  protected _organizations: BehaviorSubject<Organization[]>;\n}\n","import { KeyConnectorService as AbstractKeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CryptoServiceInitOptions, cryptoServiceFactory } from \"./crypto-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  OrganizationServiceInitOptions,\n  organizationServiceFactory,\n} from \"./organization-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\nimport { tokenServiceFactory, TokenServiceInitOptions } from \"./token-service.factory\";\n\ntype KeyConnectorServiceFactoryOptions = FactoryOptions & {\n  keyConnectorServiceOptions: {\n    logoutCallback: (expired: boolean, userId?: string) => Promise<void>;\n  };\n};\n\nexport type KeyConnectorServiceInitOptions = KeyConnectorServiceFactoryOptions &\n  StateServiceInitOptions &\n  CryptoServiceInitOptions &\n  ApiServiceInitOptions &\n  TokenServiceInitOptions &\n  LogServiceInitOptions &\n  OrganizationServiceInitOptions &\n  CryptoFunctionServiceInitOptions;\n\nexport function keyConnectorServiceFactory(\n  cache: { keyConnectorService?: AbstractKeyConnectorService } & CachedServices,\n  opts: KeyConnectorServiceInitOptions\n): Promise<AbstractKeyConnectorService> {\n  return factory(\n    cache,\n    \"keyConnectorService\",\n    opts,\n    async () =>\n      new KeyConnectorService(\n        await stateServiceFactory(cache, opts),\n        await cryptoServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await tokenServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await organizationServiceFactory(cache, opts),\n        await cryptoFunctionServiceFactory(cache, opts),\n        opts.keyConnectorServiceOptions.logoutCallback\n      )\n  );\n}\n","import { OrganizationService as AbstractOrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\nimport { BrowserOrganizationService } from \"../../services/browser-organization.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype OrganizationServiceFactoryOptions = FactoryOptions;\n\nexport type OrganizationServiceInitOptions = OrganizationServiceFactoryOptions &\n  StateServiceInitOptions;\n\nexport function organizationServiceFactory(\n  cache: { organizationService?: AbstractOrganizationService } & CachedServices,\n  opts: OrganizationServiceInitOptions\n): Promise<AbstractOrganizationService> {\n  return factory(\n    cache,\n    \"organizationService\",\n    opts,\n    async () => new BrowserOrganizationService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { AuthService as AbstractAuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { appIdServiceFactory } from \"./app-id-service.factory\";\nimport { cryptoServiceFactory, CryptoServiceInitOptions } from \"./crypto-service.factory\";\nimport {\n  environmentServiceFactory,\n  EnvironmentServiceInitOptions,\n} from \"./environment-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { I18nServiceInitOptions, i18nServiceFactory } from \"./i18n-service.factory\";\nimport {\n  KeyConnectorServiceInitOptions,\n  keyConnectorServiceFactory,\n} from \"./key-connector-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport { MessagingServiceInitOptions, messagingServiceFactory } from \"./messaging-service.factory\";\nimport {\n  PlatformUtilsServiceInitOptions,\n  platformUtilsServiceFactory,\n} from \"./platform-utils-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\nimport { TokenServiceInitOptions, tokenServiceFactory } from \"./token-service.factory\";\nimport { TwoFactorServiceInitOptions, twoFactorServiceFactory } from \"./two-factor-service.factory\";\n\ntype AuthServiceFactoyOptions = FactoryOptions;\n\nexport type AuthServiceInitOptions = AuthServiceFactoyOptions &\n  CryptoServiceInitOptions &\n  ApiServiceInitOptions &\n  TokenServiceInitOptions &\n  PlatformUtilsServiceInitOptions &\n  MessagingServiceInitOptions &\n  LogServiceInitOptions &\n  KeyConnectorServiceInitOptions &\n  EnvironmentServiceInitOptions &\n  StateServiceInitOptions &\n  TwoFactorServiceInitOptions &\n  I18nServiceInitOptions;\n\nexport function authServiceFactory(\n  cache: { authService?: AbstractAuthService } & CachedServices,\n  opts: AuthServiceInitOptions\n): Promise<AbstractAuthService> {\n  return factory(\n    cache,\n    \"authService\",\n    opts,\n    async () =>\n      new AuthService(\n        await cryptoServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await tokenServiceFactory(cache, opts),\n        await appIdServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts),\n        await messagingServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await keyConnectorServiceFactory(cache, opts),\n        await environmentServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts),\n        await twoFactorServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts)\n      )\n  );\n}\n","import { TwoFactorService as AbstractTwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { I18nServiceInitOptions, i18nServiceFactory } from \"./i18n-service.factory\";\nimport {\n  platformUtilsServiceFactory,\n  PlatformUtilsServiceInitOptions,\n} from \"./platform-utils-service.factory\";\n\ntype TwoFactorServiceFactoryOptions = FactoryOptions;\n\nexport type TwoFactorServiceInitOptions = TwoFactorServiceFactoryOptions &\n  I18nServiceInitOptions &\n  PlatformUtilsServiceInitOptions;\n\nexport async function twoFactorServiceFactory(\n  cache: { twoFactorService?: AbstractTwoFactorService } & CachedServices,\n  opts: TwoFactorServiceInitOptions\n): Promise<AbstractTwoFactorService> {\n  const service = await factory(\n    cache,\n    \"twoFactorService\",\n    opts,\n    async () =>\n      new TwoFactorService(\n        await i18nServiceFactory(cache, opts),\n        await platformUtilsServiceFactory(cache, opts)\n      )\n  );\n  service.init();\n  return service;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"@bitwarden/common/models/domain/account\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\n\nimport { sessionSync } from \"../decorators/session-sync-observable\";\n\nexport class BrowserSettingsService extends SettingsService {\n  @sessionSync({ initializer: (obj: string[][]) => obj })\n  protected _settings: BehaviorSubject<AccountSettingsSettings>;\n}\n","import { CipherService as AbstractCipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { cryptoServiceFactory, CryptoServiceInitOptions } from \"./crypto-service.factory\";\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  FileUploadServiceInitOptions,\n  fileUploadServiceFactory,\n} from \"./file-upload-service.factory\";\nimport { i18nServiceFactory, I18nServiceInitOptions } from \"./i18n-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport { SettingsServiceInitOptions, settingsServiceFactory } from \"./settings-service.factory\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype CipherServiceFactoryOptions = FactoryOptions & {\n  cipherServiceOptions?: {\n    searchServiceFactory?: () => SearchService;\n  };\n};\n\nexport type CipherServiceInitOptions = CipherServiceFactoryOptions &\n  CryptoServiceInitOptions &\n  SettingsServiceInitOptions &\n  ApiServiceInitOptions &\n  FileUploadServiceInitOptions &\n  I18nServiceInitOptions &\n  LogServiceInitOptions &\n  StateServiceInitOptions &\n  EncryptServiceInitOptions;\n\nexport function cipherServiceFactory(\n  cache: { cipherService?: AbstractCipherService } & CachedServices,\n  opts: CipherServiceInitOptions\n): Promise<AbstractCipherService> {\n  return factory(\n    cache,\n    \"cipherService\",\n    opts,\n    async () =>\n      new CipherService(\n        await cryptoServiceFactory(cache, opts),\n        await settingsServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts),\n        await fileUploadServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts),\n        opts.cipherServiceOptions?.searchServiceFactory === undefined\n          ? () => cache.searchService\n          : opts.cipherServiceOptions.searchServiceFactory,\n        await logServiceFactory(cache, opts),\n        await stateServiceFactory(cache, opts),\n        await encryptServiceFactory(cache, opts)\n      )\n  );\n}\n","import { SettingsService as AbstractSettingsService } from \"@bitwarden/common/abstractions/settings.service\";\n\nimport { BrowserSettingsService } from \"../../services/browser-settings.service\";\n\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { stateServiceFactory, StateServiceInitOptions } from \"./state-service.factory\";\n\ntype SettingsServiceFactoryOptions = FactoryOptions;\n\nexport type SettingsServiceInitOptions = SettingsServiceFactoryOptions & StateServiceInitOptions;\n\nexport function settingsServiceFactory(\n  cache: { settingsService?: AbstractSettingsService } & CachedServices,\n  opts: SettingsServiceInitOptions\n): Promise<AbstractSettingsService> {\n  return factory(\n    cache,\n    \"settingsService\",\n    opts,\n    async () => new BrowserSettingsService(await stateServiceFactory(cache, opts))\n  );\n}\n","import { FileUploadService as AbstractFileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\n\nimport { apiServiceFactory, ApiServiceInitOptions } from \"./api-service.factory\";\nimport { FactoryOptions, CachedServices, factory } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\n\ntype FileUploadServiceFactoyOptions = FactoryOptions;\n\nexport type FileUploadServiceInitOptions = FileUploadServiceFactoyOptions &\n  LogServiceInitOptions &\n  ApiServiceInitOptions;\n\nexport function fileUploadServiceFactory(\n  cache: { fileUploadService?: AbstractFileUploadService } & CachedServices,\n  opts: FileUploadServiceInitOptions\n): Promise<AbstractFileUploadService> {\n  return factory(\n    cache,\n    \"fileUploadService\",\n    opts,\n    async () =>\n      new FileUploadService(\n        await logServiceFactory(cache, opts),\n        await apiServiceFactory(cache, opts)\n      )\n  );\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\n\nimport IconDetails from \"../background/models/iconDetails\";\nimport { authServiceFactory } from \"../background/service_factories/auth-service.factory\";\nimport { cipherServiceFactory } from \"../background/service_factories/cipher-service.factory\";\nimport { searchServiceFactory } from \"../background/service_factories/search-service.factory\";\nimport { stateServiceFactory } from \"../background/service_factories/state-service.factory\";\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { Account } from \"../models/account\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nexport type BadgeOptions = {\n  tab?: chrome.tabs.Tab;\n  windowId?: number;\n};\n\nexport class UpdateBadge {\n  private authService: AuthService;\n  private stateService: BrowserStateService;\n  private cipherService: CipherService;\n  private badgeAction: typeof chrome.action;\n  private sidebarAction: OperaSidebarAction | FirefoxSidebarAction;\n  private inited = false;\n  private win: Window & typeof globalThis;\n\n  private static readonly listenedToCommands = [\n    \"updateBadge\",\n    \"loggedIn\",\n    \"unlocked\",\n    \"syncCompleted\",\n    \"bgUpdateContextMenu\",\n    \"editedCipher\",\n    \"addedCipher\",\n    \"deletedCipher\",\n  ];\n\n  static async tabsOnActivatedListener(activeInfo: chrome.tabs.TabActiveInfo) {\n    await new UpdateBadge(self).run({ tabId: activeInfo.tabId, windowId: activeInfo.windowId });\n  }\n\n  static async tabsOnReplacedListener(addedTabId: number, removedTabId: number) {\n    await new UpdateBadge(self).run({ tabId: addedTabId });\n  }\n\n  static async tabsOnUpdatedListener(\n    tabId: number,\n    changeInfo: chrome.tabs.TabChangeInfo,\n    tab: chrome.tabs.Tab\n  ) {\n    await new UpdateBadge(self).run({ tabId, windowId: tab.windowId });\n  }\n\n  static async messageListener(\n    serviceCache: Record<string, unknown>,\n    message: { command: string; tabId: number }\n  ) {\n    if (!UpdateBadge.listenedToCommands.includes(message.command)) {\n      return;\n    }\n\n    await new UpdateBadge(self).run();\n  }\n\n  constructor(win: Window & typeof globalThis) {\n    this.badgeAction = BrowserApi.getBrowserAction();\n    this.sidebarAction = BrowserApi.getSidebarAction(self);\n    this.win = win;\n  }\n\n  async run(opts?: {\n    tabId?: number;\n    windowId?: number;\n    existingServices?: Record<string, unknown>;\n  }): Promise<void> {\n    await this.initServices(opts?.existingServices);\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    await this.setBadgeBackgroundColor();\n\n    switch (authStatus) {\n      case AuthenticationStatus.LoggedOut: {\n        await this.setLoggedOut();\n        break;\n      }\n      case AuthenticationStatus.Locked: {\n        await this.setLocked();\n        break;\n      }\n      case AuthenticationStatus.Unlocked: {\n        const tab = await this.getTab(opts?.tabId, opts?.windowId);\n        await this.setUnlocked({ tab, windowId: tab?.windowId });\n        break;\n      }\n    }\n  }\n\n  async setLoggedOut(): Promise<void> {\n    await this.setBadgeIcon(\"_gray\");\n    await this.clearBadgeText();\n  }\n\n  async setLocked() {\n    await this.setBadgeIcon(\"_locked\");\n    await this.clearBadgeText();\n  }\n\n  private async clearBadgeText() {\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach(async (tab) => {\n        if (tab.id != null) {\n          await this.setBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  async setUnlocked(opts: BadgeOptions) {\n    await this.initServices();\n\n    await this.setBadgeIcon(\"\");\n\n    const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n    if (disableBadgeCounter) {\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(opts?.tab?.url);\n    let countText = ciphers.length == 0 ? \"\" : ciphers.length.toString();\n    if (ciphers.length > 9) {\n      countText = \"9+\";\n    }\n    await this.setBadgeText(countText, opts?.tab?.id);\n  }\n\n  setBadgeBackgroundColor(color = \"#294e5f\") {\n    if (this.badgeAction?.setBadgeBackgroundColor) {\n      this.badgeAction.setBadgeBackgroundColor({ color });\n    }\n    if (this.isOperaSidebar(this.sidebarAction)) {\n      this.sidebarAction.setBadgeBackgroundColor({ color });\n    }\n  }\n\n  setBadgeText(text: string, tabId?: number) {\n    this.setActionText(text, tabId);\n    this.setSideBarText(text, tabId);\n  }\n\n  async setBadgeIcon(iconSuffix: string, windowId?: number) {\n    const options: IconDetails = {\n      path: {\n        19: \"/images/icon19\" + iconSuffix + \".png\",\n        38: \"/images/icon38\" + iconSuffix + \".png\",\n      },\n    };\n    if (windowId && BrowserPlatformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n    }\n\n    await this.setActionIcon(options);\n    await this.setSidebarActionIcon(options);\n  }\n\n  private setActionText(text: string, tabId?: number) {\n    if (this.badgeAction?.setBadgeText) {\n      this.badgeAction.setBadgeText({ text, tabId });\n    }\n  }\n\n  private setSideBarText(text: string, tabId?: number) {\n    if (this.isOperaSidebar(this.sidebarAction)) {\n      this.sidebarAction.setBadgeText({ text, tabId });\n    } else if (this.sidebarAction) {\n      // Firefox\n      const title = `Bitwarden${Utils.isNullOrEmpty(text) ? \"\" : ` [${text}]`}`;\n      this.sidebarAction.setTitle({ title, tabId });\n    }\n  }\n\n  private async setActionIcon(options: IconDetails) {\n    if (!this.badgeAction?.setIcon) {\n      return;\n    }\n\n    if (this.useSyncApiCalls) {\n      this.badgeAction.setIcon(options);\n    } else {\n      await new Promise<void>((resolve) => this.badgeAction.setIcon(options, () => resolve()));\n    }\n  }\n\n  private async setSidebarActionIcon(options: IconDetails) {\n    if (!this.sidebarAction?.setIcon) {\n      return;\n    }\n\n    if (this.useSyncApiCalls) {\n      this.sidebarAction.setIcon(options);\n    } else {\n      await new Promise<void>((resolve) => this.sidebarAction.setIcon(options, () => resolve()));\n    }\n  }\n\n  private async getTab(tabId?: number, windowId?: number) {\n    return (\n      (await BrowserApi.getTab(tabId)) ??\n      (windowId\n        ? await BrowserApi.tabsQueryFirst({ active: true, windowId })\n        : await BrowserApi.tabsQueryFirst({ active: true, currentWindow: true })) ??\n      (await BrowserApi.tabsQueryFirst({ active: true, lastFocusedWindow: true })) ??\n      (await BrowserApi.tabsQueryFirst({ active: true }))\n    );\n  }\n\n  private get useSyncApiCalls() {\n    return (\n      BrowserPlatformUtilsService.isFirefox() || BrowserPlatformUtilsService.isSafari(this.win)\n    );\n  }\n\n  private async initServices(existingServiceCache?: Record<string, unknown>): Promise<UpdateBadge> {\n    if (this.inited) {\n      return this;\n    }\n\n    const serviceCache: Record<string, unknown> = existingServiceCache || {};\n    const opts = {\n      cryptoFunctionServiceOptions: { win: self },\n      encryptServiceOptions: { logMacFailures: false },\n      logServiceOptions: { isDev: false },\n      platformUtilsServiceOptions: {\n        clipboardWriteCallback: (clipboardValue: string, clearMs: number) =>\n          Promise.reject(\"not implemented\"),\n        biometricCallback: () => Promise.reject(\"not implemented\"),\n        win: self,\n      },\n      stateServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n      stateMigrationServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n      apiServiceOptions: {\n        logoutCallback: () => Promise.reject(\"not implemented\"),\n      },\n      keyConnectorServiceOptions: {\n        logoutCallback: () => Promise.reject(\"not implemented\"),\n      },\n      i18nServiceOptions: {\n        systemLanguage: BrowserApi.getUILanguage(self),\n      },\n    };\n    this.stateService = await stateServiceFactory(serviceCache, opts);\n    this.authService = await authServiceFactory(serviceCache, opts);\n    const searchService = await searchServiceFactory(serviceCache, opts);\n\n    this.cipherService = await cipherServiceFactory(serviceCache, {\n      ...opts,\n      cipherServiceOptions: { searchServiceFactory: () => searchService },\n    });\n\n    // Needed for cipher decryption\n    if (!self.bitwardenContainerService) {\n      new ContainerService(\n        serviceCache.cryptoService as CryptoService,\n        serviceCache.encryptService as EncryptService\n      ).attachToGlobal(self);\n    }\n\n    this.inited = true;\n\n    return this;\n  }\n\n  private isOperaSidebar(\n    action: OperaSidebarAction | FirefoxSidebarAction\n  ): action is OperaSidebarAction {\n    return action != null && (action as OperaSidebarAction).setBadgeText != null;\n  }\n}\n","import { SearchService as AbstractSearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport { cipherServiceFactory, CipherServiceInitOptions } from \"./cipher-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { i18nServiceFactory, I18nServiceInitOptions } from \"./i18n-service.factory\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\n\ntype SearchServiceFactoryOptions = FactoryOptions;\n\nexport type SearchServiceInitOptions = SearchServiceFactoryOptions &\n  CipherServiceInitOptions &\n  LogServiceInitOptions &\n  I18nServiceInitOptions;\n\nexport function searchServiceFactory(\n  cache: { searchService?: AbstractSearchService } & CachedServices,\n  opts: SearchServiceInitOptions\n): Promise<AbstractSearchService> {\n  return factory(\n    cache,\n    \"searchService\",\n    opts,\n    async () =>\n      new SearchService(\n        await cipherServiceFactory(cache, opts),\n        await logServiceFactory(cache, opts),\n        await i18nServiceFactory(cache, opts)\n      )\n  );\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n  savedUrls: string[];\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\n\nimport {\n  AutoFillOptions,\n  AutofillService as AutofillServiceInterface,\n  PageDetail,\n  FormData,\n} from \"./abstractions/autofill.service\";\nimport { BrowserStateService } from \"./abstractions/browser-state.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport interface GenerateFillScriptOptions {\n  skipUsernameOnlyFill: boolean;\n  onlyEmptyFields: boolean;\n  onlyVisibleFields: boolean;\n  fillNewPassword: boolean;\n  cipher: CipherView;\n}\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: BrowserStateService,\n    private totpService: TotpService,\n    private eventCollectionService: EventCollectionService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): FormData[] {\n    const formData: FormData[] = [];\n\n    const passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      true,\n      true,\n      false,\n      false\n    );\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: AutoFillOptions) {\n    const tab = options.tab;\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    let totpPromise: Promise<string> = null;\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.stateService.getDisableAutoTotpCopy().then((disabled) => {\n        if (!disabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillOnTab(pageDetails: PageDetail[], tab: chrome.tabs.Tab, fromCommand: boolean) {\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n    }\n\n    if (cipher == null || cipher.reprompt !== CipherRepromptType.None) {\n      return null;\n    }\n\n    const totpCode = await this.doAutoFill({\n      tab: tab,\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  async doAutoFillActiveTab(pageDetails: PageDetail[], fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    return await this.doAutoFillOnTab(pageDetails, tab, fromCommand);\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<chrome.tabs.Tab> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(\n    pageDetails: AutofillPageDetails,\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f) => {\n        if (AutofillService.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val: string;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId) as string;\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          AutofillService.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n    fillScript.savedUrls =\n      login?.uris?.filter((u) => u.match != UriMatchType.Never).map((u) => u.uri) ?? [];\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = AutofillService.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          AutofillService.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      AutofillService.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      AutofillService.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && AutofillService.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      AutofillService.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && AutofillService.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      AutofillService.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (\n      fillFields.exp &&\n      AutofillService.hasValue(card.expMonth) &&\n      AutofillService.hasValue(card.expYear)\n    ) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: AutofillField, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (AutofillService.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (AutofillService.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (AutofillService.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && AutofillService.hasValue(identity.address1)) {\n      let address = \"\";\n      if (AutofillService.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (AutofillService.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (AutofillService.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private static isFieldMatch(\n    value: string,\n    options: string[],\n    containsOptions?: string[]\n  ): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (AutofillService.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (\n              AutofillService.hasValue(option[j]) &&\n              option[j].toLowerCase() === dataValue.toLowerCase()\n            ) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      AutofillService.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  static loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!AutofillService.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  static fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (AutofillService.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-tag\"]) &&\n      this.fuzzyMatch(names, field[\"label-tag\"])\n    ) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-left\"]) &&\n      this.fuzzyMatch(names, field[\"label-left\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-top\"]) &&\n      this.fuzzyMatch(names, field[\"label-top\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-aria\"]) &&\n      this.fuzzyMatch(names, field[\"label-aria\"])\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private static fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  static setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  static fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  static forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { FolderService as BaseFolderService } from \"@bitwarden/common/services/folder/folder.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserFolderService extends BaseFolderService {\n  @sessionSync({ initializer: Folder.fromJSON, initializeAs: \"array\" })\n  protected _folders: BehaviorSubject<Folder[]>;\n  @sessionSync({ initializer: FolderView.fromJSON, initializeAs: \"array\" })\n  protected _folderViews: BehaviorSubject<FolderView[]>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\n\nimport { browserSession, sessionSync } from \"../decorators/session-sync-observable\";\n\n@browserSession\nexport class BrowserPolicyService extends PolicyService {\n  @sessionSync({ ctor: Policy, initializeAs: \"array\" })\n  protected _policies: BehaviorSubject<Policy[]>;\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { SafariApp } from \"../../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n      }\n    );\n\n    if (chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventCollectionService: EventCollectionService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    if (typeof info.menuItemId !== \"string\") {\n      return;\n    }\n\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: BrowserStateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      const msg: any = message;\n      if (message.message instanceof EncString) {\n        // Alternative, backwards-compatible serialization of EncString\n        msg.message = {\n          encryptedString: message.message.encryptedString,\n          encryptionType: message.message.encryptionType,\n          data: message.message.data,\n          iv: message.message.iv,\n          mac: message.message.mac,\n        };\n      }\n      this.port.postMessage(msg);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { BrowserStateService } from \"../services/abstractions/browser-state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: BrowserStateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      await this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      await this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private async doNotificationQueueCheck(tab: chrome.tabs.Tab): Promise<void> {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n            theme: await this.getCurrentTheme(),\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n            theme: await this.getCurrentTheme(),\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private async getCurrentTheme() {\n    const theme = await this.stateService.getTheme();\n\n    if (theme !== ThemeType.System) {\n      return theme;\n    }\n\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await firstValueFrom(this.folderService.folderViews$);\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.createWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.updateWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await firstValueFrom(this.folderService.folderViews$);\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    ));\n  }\n}\n","import { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { SystemService } from \"@bitwarden/common/abstractions/system.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: BrowserEnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.popupOnlyContext) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.refreshBadge();\n        await this.main.refreshMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => {\n            await this.main.refreshBadge();\n            await this.main.refreshMenu();\n          }, 2000);\n          this.main.avatarUpdateService.loadColorFromState();\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadge();\n        await this.main.refreshMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(msg.tab), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage(tabToAutoFill: chrome.tabs.Tab) {\n    const totpCode = await this.autofillService.doAutoFill({\n      tab: tabToAutoFill,\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n\n          if (await this.environmentService.hasManagedEnvironment()) {\n            await this.environmentService.setUrlsToManagedEnvironment();\n          }\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadge();\n      await this.main.refreshMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadge();\n      await this.main.refreshMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadge();\n        await this.main.refreshMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    if (BrowserApi.manifestVersion === 2) {\n      this.webRequest = (window as any).chrome.webRequest;\n    }\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { SystemService as SystemServiceAbstraction } from \"@bitwarden/common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { SystemService } from \"@bitwarden/common/services/system.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { flagEnabled } from \"../flags\";\nimport { UpdateBadge } from \"../listeners/update-badge\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { BrowserStateService as StateServiceAbstraction } from \"../services/abstractions/browser-state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport { BrowserFolderService } from \"../services/browser-folder.service\";\nimport { BrowserOrganizationService } from \"../services/browser-organization.service\";\nimport { BrowserPolicyService } from \"../services/browser-policy.service\";\nimport { BrowserSettingsService } from \"../services/browser-settings.service\";\nimport { BrowserStateService } from \"../services/browser-state.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserLocalStorageService from \"../services/browserLocalStorage.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { KeyGenerationService } from \"../services/keyGeneration.service\";\nimport { LocalBackedSessionStorageService } from \"../services/localBackedSessionStorage.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: AbstractStorageService;\n  secureStorageService: AbstractStorageService;\n  memoryStorageService: AbstractStorageService;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: BrowserEnvironmentService;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: InternalFolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  vaultTimeoutSettingsService: VaultTimeoutSettingsServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventCollectionService: EventCollectionServiceAbstraction;\n  eventUploadService: EventUploadServiceAbstraction;\n  policyService: InternalPolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: InternalOrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n  encryptService: EncryptService;\n  folderApiService: FolderApiServiceAbstraction;\n  policyApiService: PolicyApiServiceAbstraction;\n  userVerificationApiService: UserVerificationApiServiceAbstraction;\n  syncNotifierService: SyncNotifierServiceAbstraction;\n  avatarUpdateService: AvatarUpdateServiceAbstraction;\n\n  // Passed to the popup for Safari to workaround issues with theming, downloading, etc.\n  backgroundWindow = window;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n  popupOnlyContext: boolean;\n\n  constructor(public isPrivateMode: boolean = false) {\n    this.popupOnlyContext = isPrivateMode || BrowserApi.manifestVersion === 3;\n\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.refreshBadge();\n      await this.refreshMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.systemService.startProcessReload(this.authService);\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = this.popupOnlyContext\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.logService = new ConsoleLogService(false);\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.storageService = new BrowserLocalStorageService();\n    this.secureStorageService = new BrowserLocalStorageService();\n    this.memoryStorageService =\n      BrowserApi.manifestVersion === 3\n        ? new LocalBackedSessionStorageService(\n            new EncryptServiceImplementation(this.cryptoFunctionService, this.logService, false),\n            new KeyGenerationService(this.cryptoFunctionService)\n          )\n        : new MemoryStorageService();\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new BrowserStateService(\n      this.storageService,\n      this.secureStorageService,\n      this.memoryStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      },\n      window\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.encryptService = flagEnabled(\"multithreadDecryption\")\n      ? new MultithreadEncryptServiceImplementation(\n          this.cryptoFunctionService,\n          this.logService,\n          true\n        )\n      : new EncryptServiceImplementation(this.cryptoFunctionService, this.logService, true);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.encryptService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new BrowserEnvironmentService(this.stateService, this.logService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new BrowserSettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService,\n      this.encryptService\n    );\n    this.folderService = new BrowserFolderService(\n      this.cryptoService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.folderApiService = new FolderApiService(this.folderService, this.apiService);\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.syncNotifierService = new SyncNotifierService();\n    this.organizationService = new BrowserOrganizationService(this.stateService);\n    this.policyService = new BrowserPolicyService(this.stateService, this.organizationService);\n    this.policyApiService = new PolicyApiService(\n      this.policyService,\n      this.apiService,\n      this.stateService,\n      this.organizationService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutSettingsService = new VaultTimeoutSettingsService(\n      this.cryptoService,\n      this.tokenService,\n      this.policyService,\n      this.stateService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      this.vaultTimeoutSettingsService,\n      lockedCallback,\n      logoutCallback\n    );\n\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.providerService,\n      this.folderApiService,\n      this.organizationService,\n      logoutCallback\n    );\n    this.eventUploadService = new EventUploadService(\n      this.apiService,\n      this.stateService,\n      this.logService\n    );\n    this.eventCollectionService = new EventCollectionService(\n      this.cipherService,\n      this.stateService,\n      this.organizationService,\n      this.eventUploadService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(this.cryptoFunctionService, this.logService);\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventCollectionService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService, this.encryptService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationApiService = new UserVerificationApiService(this.apiService);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.userVerificationApiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventCollectionService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n\n    this.avatarUpdateService = new AvatarUpdateService(this.apiService, this.stateService);\n  }\n\n  async bootstrap() {\n    this.containerService.attachToGlobal(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventUploadService as EventUploadService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await new UpdateBadge(self).setBadgeIcon(\"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await new UpdateBadge(self).setBadgeIcon(\"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        if (!this.isPrivateMode) {\n          await this.refreshBadge();\n        }\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async refreshBadge() {\n    await new UpdateBadge(self).run({ existingServices: this as any });\n  }\n\n  async refreshMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventUploadService.uploadEvents(userId);\n\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutSettingsService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    if (BrowserApi.manifestVersion === 3) {\n      BrowserApi.sendMessage(\"updateBadge\");\n    }\n    await this.refreshBadge();\n    await this.refreshMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.systemService.startProcessReload(this.authService);\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenu(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenu(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\n@Injectable()\nexport class BrowserFileDownloadService implements FileDownloadService {\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    if (BrowserApi.isSafariApi) {\n      let data: BlobPart = null;\n      if (builder.blobOptions.type === \"text/plain\" && typeof request.blobData === \"string\") {\n        data = request.blobData;\n      } else {\n        data = Utils.fromBufferToB64(request.blobData as ArrayBuffer);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: request.blobOptions,\n          fileName: request.fileName,\n        }),\n        true\n      );\n    } else {\n      if ((navigator as any).msSaveOrOpenBlob) {\n        (navigator as any).msSaveBlob(builder.blob, request.fileName);\n      } else {\n        const a = window.document.createElement(\"a\");\n        a.href = URL.createObjectURL(builder.blob);\n        a.download = request.fileName;\n        window.document.body.appendChild(a);\n        a.click();\n        window.document.body.removeChild(a);\n      }\n    }\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserStateService as StateServiceAbstraction } from \"../../services/abstractions/browser-state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      await this.themingService.monitorThemeChanges();\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  aria-describedby=\"masterPasswordHelp\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div id=\"masterPasswordHelp\" class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\nimport { MEMORY_STORAGE, SECURE_STORAGE } from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { Account } from \"../../models/account\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { BrowserStateService as StateServiceAbstraction } from \"../../services/abstractions/browser-state.service\";\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\nimport { BrowserOrganizationService } from \"../../services/browser-organization.service\";\nimport { BrowserPolicyService } from \"../../services/browser-policy.service\";\nimport { BrowserSettingsService } from \"../../services/browser-settings.service\";\nimport { BrowserStateService } from \"../../services/browser-state.service\";\nimport { BrowserFileDownloadService } from \"../../services/browserFileDownloadService\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst needsBackgroundInit = BrowserApi.getBackgroundPage() == null;\nconst isPrivateMode = needsBackgroundInit && BrowserApi.manifestVersion !== 3;\nconst mainBackground: MainBackground = needsBackgroundInit\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(isPrivateMode);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return needsBackgroundInit\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    {\n      provide: FolderService,\n      useFactory: getBgService<FolderService>(\"folderService\"),\n      deps: [],\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useFactory: getBgService<FolderApiServiceAbstraction>(\"folderApiService\"),\n      deps: [],\n    },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: BrowserEnvironmentService,\n      useExisting: EnvironmentService,\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    {\n      provide: EventUploadService,\n      useFactory: getBgService<EventUploadService>(\"eventUploadService\"),\n      deps: [],\n    },\n    {\n      provide: EventCollectionService,\n      useFactory: getBgService<EventCollectionService>(\"eventCollectionService\"),\n      deps: [],\n    },\n    {\n      provide: PolicyService,\n      useFactory: (\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationService\n      ) => {\n        return new BrowserPolicyService(stateService, organizationService);\n      },\n      deps: [StateServiceAbstraction, OrganizationService],\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useFactory: getBgService<PolicyApiServiceAbstraction>(\"policyApiService\"),\n      deps: [],\n    },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: (stateService: StateServiceAbstraction) => {\n        return new BrowserSettingsService(stateService);\n      },\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: AbstractStorageService,\n      useFactory: getBgService<AbstractStorageService>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutSettingsService,\n      useFactory: getBgService<VaultTimeoutSettingsService>(\"vaultTimeoutSettingsService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: (stateService: StateServiceAbstraction) => {\n        return new BrowserOrganizationService(stateService);\n      },\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"memoryStorageService\"),\n    },\n    {\n      provide: StateMigrationService,\n      useFactory: getBgService<StateMigrationService>(\"stateMigrationService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: AbstractStorageService,\n        secureStorageService: AbstractStorageService,\n        memoryStorageService: AbstractStorageService,\n        logService: LogServiceAbstraction,\n        stateMigrationService: StateMigrationService\n      ) => {\n        return new BrowserStateService(\n          storageService,\n          secureStorageService,\n          memoryStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        );\n      },\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogServiceAbstraction,\n        StateMigrationService,\n      ],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n    {\n      provide: FileDownloadService,\n      useClass: BrowserFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useFactory: (\n        stateService: StateServiceAbstraction,\n        platformUtilsService: PlatformUtilsService\n      ) => {\n        return new ThemingService(\n          stateService,\n          // Safari doesn't properly handle the (prefers-color-scheme) media query in the popup window, it always returns light.\n          // In Safari we have to use the background page instead, which comes with limitations like not dynamically changing the extension theme when the system theme is changed.\n          platformUtilsService.isSafari() ? getBgService<Window>(\"backgroundWindow\")() : window,\n          document\n        );\n      },\n      deps: [StateServiceAbstraction, PlatformUtilsService],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"@bitwarden/angular/components/toastr.component\";\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ColorPasswordCountPipe } from \"@bitwarden/angular/pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"@bitwarden/angular/pipes/color-password.pipe\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { AboutComponent } from \"./settings/about.component\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault/vault-items.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    LayoutModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    VaultItemsComponent,\n    CollectionsComponent,\n    ColorPasswordPipe,\n    ColorPasswordCountPipe,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n    AboutComponent,\n  ],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + \"encrypt-worker\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(51579)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","remove","BitwardenToast","constructor","toastrService","toastPackage","super","opacity","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","useValue","default","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Mir","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","id","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","EnvironmentUrls","events","keyConnector","obj","Object","assign","stateService","urlsSubject","Subject","scimUrl","activeAccount$","pipe","concatMap","setUrlsFromStorage","subscribe","hasBaseUrl","getNotificationsUrl","getWebVaultUrl","getSendUrl","getIconsUrl","getApiUrl","getIdentityUrl","getEventsUrl","eventsUrl","getKeyConnectorUrl","keyConnectorUrl","getScimUrl","getEnvironmentUrls","envUrls","formatUrl","scim","setEnvironmentUrls","next","replace","startsWith","isCloud","getFlags","envFlags","JSON","parse","flagEnabled","flag","flags","EncryptionType","BrowserEnvironmentService","logService","hasManagedEnvironment","getManagedEnvironment","e","error","settingsHaveChanged","env","Promise","resolve","reject","chrome","storage","managed","get","result","runtime","lastError","environment","setUrlsToManagedEnvironment","BoxRowDirective","elRef","el","nativeElement","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","onClick","event","target","contains","tagName","inputEl","type","click","focus","nodeURL","window","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","isNullOrWhitespace","hostname","validHosts","getUrl","host","parseResult","isIp","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","undefined","source","keys","k","Number","isNaN","getUrlObject","s","charAt","toUpperCase","bgColor","threshold","svgTextFill","bgColorHexNums","substring","hash","color","bitwardenContainerService","fromEntries","record","entries","destination","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","EncString","encryptedStringOrType","data","iv","mac","initFromData","initFromEncryptedString","ivBytes","macBytes","dataBytes","toJSON","encryptedString","encType","encryptionType","encPieces","parseEncryptedString","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","AesCbc256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","headerPieces","decrypt","orgId","key","decryptedValue","getKeyForDecryption","encryptService","getEncryptService","decryptToUtf8","cryptoService","getCryptoService","getOrgKey","getKeyForUserEncryption","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","p","then","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","title","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","StopClickDirective","$event","preventDefault","resetEnvironment","EnvironmentComponent","showEditedManagedSettings","navigate","PasswordHintRequest","ApiService","LogService","LoginService","apiService","loginService","successRoute","getEmail","formPromise","postPasswordHint","onSuccessfulSubmit","ValidationService","ApiActionDirective","validationService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","getSingleMessage","showError","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","take","HintComponent","StateService","HomeComponent","formBuilder","loginInitiated","formGroup","group","rememberEmail","savedEmail","getRememberEmail","patchValue","getRememberedEmail","markAllAsTouched","invalid","setEmail","value","setRememberEmail","selfHostedDomain","setFormValues","HashPurpose","KeySuffixOptions","SecretVerificationRequest","CryptoService","VaultTimeoutService","VaultTimeoutSettingsService","vaultTimeoutService","vaultTimeoutSettingsService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","destroy$","load","takeUntil","ngOnDestroy","complete","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","BiometricErrors","startDesktop","description","desktopIntegrationDisabled","A11yTitleDirective","appA11yTitle","ClientType","DeviceType","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","sendNativeMessage","responseData","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","getDevice","isFirefox","FirefoxExtension","isOpera","OperaExtension","isEdge","EdgeExtension","isVivaldi","VivaldiExtension","isChrome","ChromeExtension","isSafari","SafariExtension","getDeviceString","getClientType","Browser","opr","addons","isIE","isMacAppStore","isViewOpen","isPopupOpen","sidebarView","sidebarViewName","extension","getViews","lockTimeout","launchUri","uri","options","createNewTab","extensionPage","getApplicationVersion","getApplicationVersionNumber","supportsWebAuthn","PublicKeyCredential","supportsDuo","text","body","confirmText","cancelText","bodyIsHtml","dialogId","html","date","isDev","isSelfHost","copyToClipboard","doc","clearing","clearMs","sendMessageToApp","clipboard","writeText","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","appendChild","select","execCommand","console","warn","removeChild","readFromClipboard","readText","resolveDialogPromise","confirmed","has","delete","resolvePasswordDialogPromise","canceled","password","resolveObj","tryResolve","getPlatformInfo","os","getBrowserInfo","version","authenticateBiometric","sidebarAction","manifestVersion","getManifest","manifest_version","tabsQueryFirst","active","windowId","windows","WINDOW_ID_CURRENT","tabId","tabs","currentWindow","tabsQuery","query","tab","tabSendMessage","sendMessage","message","responseCallback","getAll","incognito","callback","onCreated","addListener","getBackgroundPage","create","onMessage","msg","sender","subscriber","arg","windowType","tabToClose","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","action","browserAction","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","PrivateModeWarningComponent","popupUtilsService","showWarning","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","code","codeVerifier","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","stringify","parent","v","initComponent","params","validMessage","origin","parsedMessage","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","handleCaptchaRequired","AppIdService","PasswordGenerationService","CryptoFunctionService","FormValidationErrorsService","appIdService","passwordGenerationService","cryptoFunctionService","formValidationErrorService","selfHosted","validatedEmail","paramEmailSet","twoFactorRoute","forcePasswordResetRoute","loggedEmail","queryParamsEmail","setValue","errorText","getErrorToastMessage","credentials","logIn","saveEmailSettings","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","state","generatePassword","ssoCodeVerifier","codeVerifierHash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","validateEmail","controls","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","getFormValidationErrors","shift","errorName","errorTag","controlName","deviceIdentifier","getAppId","res","getKnownDevice","showLoginWithDevice","SyncService","LoginComponent","syncService","fullSync","settings","redirectUri","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","InputsFieldMatch","matchTo","errorMessage","control","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","captchaBypassToken","registerResponse","registerAccount","buildRegisterRequest","successful","getStrengthResult","passwordStrengthResult","getPasswordScoreText","required","validateRegistration","hasError","isValid","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","loginResponse","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScore","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","clearTimeout","strengthResult","passwordStrength","getPasswordStrengthUserInput","userInput","atPosition","concat","RegisterComponent","OrganizationApiServiceAbstraction","organizationApiService","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","masterPasswordPolicyOptions$","enforcedPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","PolicyApiServiceAbstraction","OrganizationUserService","policyApiService","organizationUserService","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenTwoFactorRequest","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","size","sendEmail","doSubmit","logInTwoFactor","clearValues","doToast","emailPromise","authRequestAccessCode","accessCode","authRequestId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithUserApiKey","authingWithPasswordless","BroadcasterService","anotherMethod","TwoFactorComponent","broadcasterService","showNewWindowMessage","snapshot","paramMap","isLinux","unsubscribe","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","getOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","toggleOptions","number","checked","normalizeOptions","forwardOptions","forwardedService","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","expand","PopOutComponent","show","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileName","fileSize","json","SendTextView","hidden","maskedText","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","arrayBuffer","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","cryptoKey","fromJSON","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","componentName","File","Text","sendLinkBaseUrl","link","isDateTimeLocalSupported","policyAppliesToActiveUser$","DisableSend","policyAppliesToActiveUser","SendOptions","editMode","sendId","setDates","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","deletePromise","deleteWithServer","sendData","togglePasswordVisible","BrowserStateService","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","useExisting","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","timeout","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","BrowserComponentState","BrowserSendComponentState","typeCounts","StopPropDirective","stopPropagation","selectSend","copySendLink","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","addSend","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","lastNavigationSuccessId","navigationTrigger","toggleUriInput","removeUri","ExcludedDomainsComponent","excludedDomains","existingExcludedDomains","savedDomains","getNeverDomains","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","splice","newExcludedDomains","getNewlyAddedDomians","validDomain","setNeverDomains","trackByFunction","index","item","newDomain","some","oldDomain","uriSet","Set","currentUris","EncryptedExportType","EventType","ExportService","EventCollectionService","UserVerificationService","FileDownloadService","exportService","eventCollectionService","userVerificationService","fileDownloadService","exportForm","format","secret","filePassword","confirmFilePassword","fileEncryptionType","AccountEncrypted","formatOptions","DisablePersonalVaultExport","checkExportDisabled","merge","startWith","adjustValidators","disable","encryptedFormat","doExport","getExportData","downloadFile","collectEvent","clearValidators","warningDialog","verifyUser","FileEncrypted","getPasswordProtectedExport","getExport","getFileName","prefix","collect","User_ClientExportedVault","enable","csv","download","blobData","blobOptions","isNotProviderUser","org","isProviderUser","OrganizationService","VerificationType","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","OTP","MasterPassword","UserVerificationComponent","multi","ExportComponent","FolderView","FolderService","FolderApiServiceAbstraction","folderService","folderApiService","onSavedFolder","onDeletedFolder","folder","save","folderId","FolderAddEditComponent","ThemeType","UriMatchType","folderSelected","FoldersComponent","folders$","folderViews$","folders","addFolder","TotpService","AbstractThemingService","saveClearClipboard","saveDefaultUriMatch","updateAutoTotpCopy","updateAddLoginNotification","updateChangedPasswordNotification","updateContextMenuItem","updateShowCardsCurrentTab","updateShowIdentitiesCurrentTab","updateFavicon","updateBadgeCounter","saveTheme","updateAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","OptionsComponent","totpService","themingService","enableFavicon","enableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","enableAutoTotpCopy","enableContextMenuItem","enableAddLoginNotification","enableChangedPasswordNotification","showCardsCurrentTab","showIdentitiesCurrentTab","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","getDisableAutoTotpCopy","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","setDisableAddLoginNotification","setDisableChangedPasswordNotification","setDisableContextMenuItem","setDisableAutoTotpCopy","setEnableAutoFillOnPageLoad","setAutoFillOnPageLoadDefault","setDisableBadgeCounter","setDontShowCardsCurrentTab","setDontShowIdentitiesCurrentTab","updateConfiguredTheme","setDefaultUriMatch","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","goBack","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","shown","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","ConfigServiceAbstraction","AboutComponent","configService","year","getFullYear","serverConfig$","form","vaultTimeout","custom","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","combineLatestWith","policies$","policies","vaultTimeoutPolicy","policy","enabled","applyVaultTimeoutPolicy","getVaultTimeout","current","max","vaultTimeouts","every","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","updateBiometric","updateAutoBiometricsPrompt","changePassword","RateUrls","SettingsComponent","biometric","enableAutoBiometricsPrompt","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","getVaultTimeoutAction","vaultTimeoutAction","newValue","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","granted","requestPermission","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","catch","setBiometricUnlock","setBiometricFingerprintValidated","setDisableAutoBiometricsPrompt","lock","twoStep","share","import","export","help","about","fingerprint","getFingerprint","innerText","div","confirmButtonText","rate","deviceType","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","InitializerKey","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","AttachmentView","FieldView","newField","showValue","showCount","linkedId","maskedValue","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","CanLaunchWhitelist","LoginUriView","u","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","isWebsite","canLaunch","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","hasTotp","PasswordHistoryView","ph","lastUsedDate","SecureNoteView","n","CipherView","initializerKey","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","creationDate","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","view","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","personalOwnershipPolicyAppliesToActiveUser","myEmail","o","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","getCardExpMonthDisplay","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","createWithServer","updateWithServer","softDeleteWithServer","restoreWithServer","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","setProperty","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","EncArrayBuffer","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","b64","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","validationErrors","HCaptcha_SiteKey","statusCode","getAllMessages","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","encBuf","fromResponse","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","reupload","AttachmentsComponent","openedAttachmentsInPopup","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","VaultFilter","selectedCollection","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","buildFilter","cipherPassesFilter","TreeNode","node","children","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","nestedTraverse","newPartName","getTreeNodeObject","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","organizations","buildNestedFolders","transformation","storedFolders","ciphers","orgCiphers","oc","nestedFolders","getAllFoldersNested","nestedList","mergeMap","buildCollections","storedCollections","nestedCollections","getAllNested","checkForSingleOrganizationPolicy","firstValueFrom","SingleOrg","checkForPersonalOwnershipPolicy","nodes","folderCopy","getFolderNested","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","AutofillService","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","launchCipher","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","CipherRowComponent","selectCipher","viewCipher","openOverlay","selectMyVault","selectOrganization","selectAllVaults","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","_selectedVault","BehaviorSubject","isOpen","selectedVault$","enforcePersonalOwnership","overlayPostition","originX","originY","overlayX","overlayY","_destroy","shouldShow","handleKeyboardEvent","organizations$","orgs","firstOrganization","selectedOrganization","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","templateRef","attach","outsidePointerEvents","backdropClick","detachments","dispose","fillCipher","addCipher","CurrentTabComponent","autofillService","pageDetails","searchTypeSearch","isLoading","showOrganizations","search$","frameId","webExtSender","details","debounceTime","searchVault","totpCode","totpTimeout","doAutoFill","fillNewPassword","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","dontShowCards","dontShowIdentities","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","isChecked","onSharedCipher","allCollections","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","BrowserGroupingsComponentState","collectionCounts","folderCounts","favoriteCiphers","noFolderCiphers","selectFolder","selectCollection","selectTrash","VaultFilterComponent","browserStateService","deletedCount","showCollections","preventSelected","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","folderCount","setBrowserVaultItemsComponentState","getBrowserGroupingComponentState","replaceState","selectedTimeout","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","searchCiphers","deleted","updateLastLaunchedDate","vaultFilterChanged","colId","setBrowserGroupingComponentState","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","accessEvents","deletedFilter","indexedCiphers","doSearch","rightClickCipher","addCipherOptions","isSearching","changeVaultSelection","VaultItemsComponent","noneFolder","showVaultFilter","getBrowserVaultItemsComponentState","folderNode","collectionNode","getNested","showGroupings","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","showPremiumRequiredTotp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","colorizedPasswordCount","ViewCustomFieldsComponent","fillCipherAndSave","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","useClass","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","forceWindowReload","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","enableHtml","trustedHtml","timeOut","iconClasses","timer","getIsAuthenticated","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","AccountService","InternalAccountService","StateVersion","ConfigApiServiceAbstraction","EncryptService","EventUploadService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","AbstractStorageService","AbstractCachedStorageService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","ServerConfigData","serverConfigResponse","gitHash","server","ThirdPartyServerConfigData","utcDate","EnvironmentServerConfigData","vault","EncryptionPair","encrypted","decrypted","ArrayBuffer","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","environmentUrls","pinProtected","serverConfig","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","UpdateAvatarRequest","avatarColor","_avatarUpdate$","avatarUpdate$","loadColorFromState","getAvatarColor","pushUpdate","putAvatar","setAvatarColor","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","createHubConnection","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","on","ProcessNotification","stopHubConnection","notification","authResponsePushNotifiction","DeviceRequest","appId","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","passwordlessAuthRequest","toIdentityToken","scope","client_id","deviceName","authRequest","twoFactorToken","twoFactorProvider","twoFactorRemember","UserApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","AttachmentResponse","PasswordHistoryResponse","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","requestApproved","RegisterResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","hasNoHistory","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","systemUser","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useScim","useCustomPermissions","useResetPassword","useSecretsManager","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","resetPasswordEnrolled","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","twoFactorEnabled","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","FolderResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","qsStringify","getCredentials","method","responseJson","isJsonResponse","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","postAuthRequest","getAuthResponse","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getFullCipherDetails","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putPartialCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","hashBytes","hashStart","hashEnding","breachedAccounts","limit","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","PasswordTokenRequest","AuthResult","requiresCaptcha","LogInStrategy","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","setUserKey","createKeyPairForOldAccount","PasswordLogInStrategy","localHashedPassword","makePreloginKey","PasswordlessLogInStrategy","passwordlessCredentials","decKey","localPasswordHash","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","getAndSetKey","UserApiLogInStrategy","setApiKeyClientId","setApiKeyClientSecret","PreloginRequest","pushNotificationSubject","logInStrategy","strategy","clearState","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","getPushNotifcationObs$","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Attachment","decryptAttachmentKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherPartialRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","reindexCiphers","hasKey","orgKeys","getOrgKeys","userKey","grouped","agg","decCiphers","groupedCiphers","decryptItems","flat","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","cr","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","collectionCopy","setEncryptedCollections","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","expiresSoon","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","rsaDecrypt","toData","providerKey","getProviderKey","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","plainValue","encValue","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","hmac","aesDecrypt","classInitializers","MultithreadEncryptServiceImplementation","clear$","worker","Worker","restartTimeout","fromEvent","jsonItem","defaultIfEmpty","terminate","EventData","eventUploadService","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","uploadEvents","EventRequest","checkOnInterval","req","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getEncryptedExport","getDecryptedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","getAllDecryptedFromState","foldersMap","exportCiphers","buildCommonCipher","getAllFromState","exportData","exportPromises","decCol","collectionsMap","orgKey","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderApiService","postFolder","putFolder","deleteFolder","OrganizationUserType","_folders","_folderViews","activeAccountUnlocked$","unlocked","getEncryptedFolders","updateObservables","getValue","getFromState","decryptFolders","setEncryptedFolders","updates","cId","decryptFolderPromises","decryptedFolders","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","_email","_rememberEmail","setRememberedEmail","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","OrganizationUserResponse","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationUserBulkResponse","OrganizationUserBulkRequest","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","canAccessSecretsManager","_organizations","getOrganizations","organizationsMap","canManageSponsorships","getByIdentifier","setOrganizations","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","PolicyApiService","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","mapPoliciesFromToken","putPolicy","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","_policies","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","setDecryptedPolicies","of","obsPolicies","filteredPolicies","policyType","policyFilter","checkPoliciesThatApplyToUser","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyAppliesToUser","setEncryptedPolicies","isExcemptFromPolicies","policiesMap","policySet","Accepted","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","StorageLocation","_settings","getSettings","setEquivalentDomains","setSettings","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","partialKeys","DDG_SHARED_KEY","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","accountsSubject","accounts$","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","disableAddLoginNotification","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setTheme","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","decoded","clientIdClientSecret","setClientId","setClientSecret","clearToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","providerService","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","eqDomains","_sync","sync$","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","UserVerificationApiService","postAccountVerifyOTP","postAccountRequestOTP","VerifyOTPRequest","userVerificationApiService","buildRequest","verification","requestClass","alreadyHashed","validateInput","AnonAddyForwarder","generate","anonaddy","redirect","DuckDuckGoForwarder","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","methodResponses","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","shouldLock","executeTimeoutAction","vaultTimeoutSeconds","currentAction","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","decipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","buf","subscribers","messageCallback","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","ThemingService","_theme","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","matchMedia","JslibServicesModule","useFactory","deps","language","accountService","deleteAccount","verificationRequest","Observable","cryptoFunctionservice","getOrganizationUser","getOrganizationUserGroups","getAllUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","errors","controlErrors","keyError","getBilling","getSubscription","getLicense","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","reinstate","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","updateKeys","getSso","updateSso","configApiService","_serverConfig","switchMap","E","buildServerConfig","fetchServerConfig","defaultErrorMessage","ContainerService","attachToGlobal","MemoryStorageService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","executeProcessReload","inactiveMoreThanSeconds","seconds","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","clearPendingClipboard","factory","cachedServices","opts","alwaysInitializeNewService","instanceOrPromise","doNotStoreInitializedService","AbstractChromeStorageService","chromeStorageApi","keyedObj","BrowserLocalStorageService","local","BrowserMemoryStorageService","session","LocalBackedSessionStorageService","keyGenerationService","localStorage","sessionStorage","getBypassCache","getLocalSession","getSessionEncKey","sessionEncKey","localSession","setLocalSession","sessionJson","setSessionEncKey","setEncryptedLocalSession","setDecryptedLocalSession","jsonSession","encSession","storedKey","makeEphemeralKey","cryptoFunctionServiceFactory","cryptoFunctionServiceOptions","logServiceFactory","logServiceOptions","encryptServiceOptions","KeyGenerationService","numBytes","diskStorageServiceFactory","secureStorageServiceFactory","memoryStorageServiceFactory","keyGenerationServiceFactory","appIdServiceFactory","SessionSyncer","subject","metaData","ignoreNUpdates","ctor","initializer","ReplaySubject","_buffer","observe","hasInSessionMemory","sessionKey","listenForUpdates","updateSession","updateMessageCommand","updateFromMessage","itemBuilder","initializeAs","keyValuePair","getFromSessionMemory","setInSessionMemory","browserSession","__syncedItemMetadata","__sessionSyncers","buildSyncer","syncer","sessionSync","buildOptions","AccountSettings","Account","groupings","stateServiceFactory","service","stateMigrationServiceOptions","stateMigrationServiceFactory","stateServiceOptions","environmentServiceFactory","BrowserMessagingService","messagingServiceFactory","platformUtilsServiceFactory","platformUtilsServiceOptions","tokenServiceFactory","apiServiceFactory","apiServiceOptions","BrowserCryptoService","cryptoServiceFactory","systemLanguage","localesDirectory","getLocalesJson","_locale","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","i18nServiceFactory","i18nServiceOptions","BrowserOrganizationService","keyConnectorServiceFactory","organizationServiceFactory","keyConnectorServiceOptions","authServiceFactory","twoFactorServiceFactory","BrowserSettingsService","cipherServiceFactory","settingsServiceFactory","fileUploadServiceFactory","cipherServiceOptions","searchServiceFactory","UpdateBadge","badgeAction","getBrowserAction","getSidebarAction","activeInfo","addedTabId","removedTabId","changeInfo","serviceCache","listenedToCommands","initServices","existingServices","setBadgeBackgroundColor","setLoggedOut","setLocked","getTab","setUnlocked","setBadgeIcon","clearBadgeText","getActiveTabs","setBadgeText","countText","isOperaSidebar","setActionText","setSideBarText","iconSuffix","setActionIcon","setSidebarActionIcon","setTitle","setIcon","useSyncApiCalls","lastFocusedWindow","existingServiceCache","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillOnTab","fromCommand","lastLaunchedCipher","doAutoFillActiveTab","getActiveTab","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","savedUrls","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","BrowserFolderService","BrowserPolicyService","BrowserMessagingPrivateModeBackgroundService","checkSafari","CommandsBackground","main","processCommand","commandToRetry","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","getCurrentTheme","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","popupOnlyContext","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","refreshBadge","refreshMenu","logout","avatarUpdateService","reseedStorage","autofillTimeout","autofillPage","referrer","tabToAutoFill","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","onReplaced","onReplacedRan","onUpdated","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","isPrivateMode","backgroundWindow","menuOptionsLoaded","nativeMessagingBackground","syncNotifierService","that","backgroundMessagingService","containerService","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","onWindowCreated","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenu","loadLoginContextMenuOptions","loadNoLoginsContextMenuOptions","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","actionSetIcon","theAction","suffix","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","BrowserFileDownloadService","msSaveOrOpenBlob","msSaveBlob","createObjectURL","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","needsBackgroundInit","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","ServicesModule","initService","AppModule","positionClass","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","globalThis","Function","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","scripts","baseURI","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}